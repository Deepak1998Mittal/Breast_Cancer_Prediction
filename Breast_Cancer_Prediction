{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled0.ipynb",
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SEmzGuJMUUKC",
        "colab_type": "text"
      },
      "source": [
        "### Importing essential Data Manipulation libraries"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "zVirWvSDH5fi",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "%matplotlib inline"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uTOezZSWJnBH",
        "colab_type": "code",
        "outputId": "54f42098-a604-4bef-b210-651417a2129e",
        "colab": {
          "resources": {
            "http://localhost:8080/nbextensions/google.colab/files.js": {
              "data": "Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7Ci8vIE1heCBhbW91bnQgb2YgdGltZSB0byBibG9jayB3YWl0aW5nIGZvciB0aGUgdXNlci4KY29uc3QgRklMRV9DSEFOR0VfVElNRU9VVF9NUyA9IDMwICogMTAwMDsKCmZ1bmN0aW9uIF91cGxvYWRGaWxlcyhpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IHN0ZXBzID0gdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKTsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIC8vIENhY2hlIHN0ZXBzIG9uIHRoZSBvdXRwdXRFbGVtZW50IHRvIG1ha2UgaXQgYXZhaWxhYmxlIGZvciB0aGUgbmV4dCBjYWxsCiAgLy8gdG8gdXBsb2FkRmlsZXNDb250aW51ZSBmcm9tIFB5dGhvbi4KICBvdXRwdXRFbGVtZW50LnN0ZXBzID0gc3RlcHM7CgogIHJldHVybiBfdXBsb2FkRmlsZXNDb250aW51ZShvdXRwdXRJZCk7Cn0KCi8vIFRoaXMgaXMgcm91Z2hseSBhbiBhc3luYyBnZW5lcmF0b3IgKG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIgeWV0KSwKLy8gd2hlcmUgdGhlcmUgYXJlIG11bHRpcGxlIGFzeW5jaHJvbm91cyBzdGVwcyBhbmQgdGhlIFB5dGhvbiBzaWRlIGlzIGdvaW5nCi8vIHRvIHBvbGwgZm9yIGNvbXBsZXRpb24gb2YgZWFjaCBzdGVwLgovLyBUaGlzIHVzZXMgYSBQcm9taXNlIHRvIGJsb2NrIHRoZSBweXRob24gc2lkZSBvbiBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcCwKLy8gdGhlbiBwYXNzZXMgdGhlIHJlc3VsdCBvZiB0aGUgcHJldmlvdXMgc3RlcCBhcyB0aGUgaW5wdXQgdG8gdGhlIG5leHQgc3RlcC4KZnVuY3Rpb24gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpIHsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIGNvbnN0IHN0ZXBzID0gb3V0cHV0RWxlbWVudC5zdGVwczsKCiAgY29uc3QgbmV4dCA9IHN0ZXBzLm5leHQob3V0cHV0RWxlbWVudC5sYXN0UHJvbWlzZVZhbHVlKTsKICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5leHQudmFsdWUucHJvbWlzZSkudGhlbigodmFsdWUpID0+IHsKICAgIC8vIENhY2hlIHRoZSBsYXN0IHByb21pc2UgdmFsdWUgdG8gbWFrZSBpdCBhdmFpbGFibGUgdG8gdGhlIG5leHQKICAgIC8vIHN0ZXAgb2YgdGhlIGdlbmVyYXRvci4KICAgIG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSA9IHZhbHVlOwogICAgcmV0dXJuIG5leHQudmFsdWUucmVzcG9uc2U7CiAgfSk7Cn0KCi8qKgogKiBHZW5lcmF0b3IgZnVuY3Rpb24gd2hpY2ggaXMgY2FsbGVkIGJldHdlZW4gZWFjaCBhc3luYyBzdGVwIG9mIHRoZSB1cGxvYWQKICogcHJvY2Vzcy4KICogQHBhcmFtIHtzdHJpbmd9IGlucHV0SWQgRWxlbWVudCBJRCBvZiB0aGUgaW5wdXQgZmlsZSBwaWNrZXIgZWxlbWVudC4KICogQHBhcmFtIHtzdHJpbmd9IG91dHB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIG91dHB1dCBkaXNwbGF5LgogKiBAcmV0dXJuIHshSXRlcmFibGU8IU9iamVjdD59IEl0ZXJhYmxlIG9mIG5leHQgc3RlcHMuCiAqLwpmdW5jdGlvbiogdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKSB7CiAgY29uc3QgaW5wdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaW5wdXRJZCk7CiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gZmFsc2U7CgogIGNvbnN0IG91dHB1dEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChvdXRwdXRJZCk7CiAgb3V0cHV0RWxlbWVudC5pbm5lckhUTUwgPSAnJzsKCiAgY29uc3QgcGlja2VkUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHsKICAgICAgcmVzb2x2ZShlLnRhcmdldC5maWxlcyk7CiAgICB9KTsKICB9KTsKCiAgY29uc3QgY2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7CiAgaW5wdXRFbGVtZW50LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoY2FuY2VsKTsKICBjYW5jZWwudGV4dENvbnRlbnQgPSAnQ2FuY2VsIHVwbG9hZCc7CiAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBjYW5jZWwub25jbGljayA9ICgpID0+IHsKICAgICAgcmVzb2x2ZShudWxsKTsKICAgIH07CiAgfSk7CgogIC8vIENhbmNlbCB1cGxvYWQgaWYgdXNlciBoYXNuJ3QgcGlja2VkIGFueXRoaW5nIGluIHRpbWVvdXQuCiAgY29uc3QgdGltZW91dFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9LCBGSUxFX0NIQU5HRV9USU1FT1VUX01TKTsKICB9KTsKCiAgLy8gV2FpdCBmb3IgdGhlIHVzZXIgdG8gcGljayB0aGUgZmlsZXMuCiAgY29uc3QgZmlsZXMgPSB5aWVsZCB7CiAgICBwcm9taXNlOiBQcm9taXNlLnJhY2UoW3BpY2tlZFByb21pc2UsIHRpbWVvdXRQcm9taXNlLCBjYW5jZWxQcm9taXNlXSksCiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdzdGFydGluZycsCiAgICB9CiAgfTsKCiAgaWYgKCFmaWxlcykgewogICAgcmV0dXJuIHsKICAgICAgcmVzcG9uc2U6IHsKICAgICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICAgIH0KICAgIH07CiAgfQoKICBjYW5jZWwucmVtb3ZlKCk7CgogIC8vIERpc2FibGUgdGhlIGlucHV0IGVsZW1lbnQgc2luY2UgZnVydGhlciBwaWNrcyBhcmUgbm90IGFsbG93ZWQuCiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gdHJ1ZTsKCiAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7CiAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7CiAgICBsaS5hcHBlbmQoc3BhbihmaWxlLm5hbWUsIHtmb250V2VpZ2h0OiAnYm9sZCd9KSk7CiAgICBsaS5hcHBlbmQoc3BhbigKICAgICAgICBgKCR7ZmlsZS50eXBlIHx8ICduL2EnfSkgLSAke2ZpbGUuc2l6ZX0gYnl0ZXMsIGAgKwogICAgICAgIGBsYXN0IG1vZGlmaWVkOiAkewogICAgICAgICAgICBmaWxlLmxhc3RNb2RpZmllZERhdGUgPyBmaWxlLmxhc3RNb2RpZmllZERhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCkgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbi9hJ30gLSBgKSk7CiAgICBjb25zdCBwZXJjZW50ID0gc3BhbignMCUgZG9uZScpOwogICAgbGkuYXBwZW5kQ2hpbGQocGVyY2VudCk7CgogICAgb3V0cHV0RWxlbWVudC5hcHBlbmRDaGlsZChsaSk7CgogICAgY29uc3QgZmlsZURhdGFQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7CiAgICAgICAgcmVzb2x2ZShlLnRhcmdldC5yZXN1bHQpOwogICAgICB9OwogICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7CiAgICB9KTsKICAgIC8vIFdhaXQgZm9yIHRoZSBkYXRhIHRvIGJlIHJlYWR5LgogICAgbGV0IGZpbGVEYXRhID0geWllbGQgewogICAgICBwcm9taXNlOiBmaWxlRGF0YVByb21pc2UsCiAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgYWN0aW9uOiAnY29udGludWUnLAogICAgICB9CiAgICB9OwoKICAgIC8vIFVzZSBhIGNodW5rZWQgc2VuZGluZyB0byBhdm9pZCBtZXNzYWdlIHNpemUgbGltaXRzLiBTZWUgYi82MjExNTY2MC4KICAgIGxldCBwb3NpdGlvbiA9IDA7CiAgICB3aGlsZSAocG9zaXRpb24gPCBmaWxlRGF0YS5ieXRlTGVuZ3RoKSB7CiAgICAgIGNvbnN0IGxlbmd0aCA9IE1hdGgubWluKGZpbGVEYXRhLmJ5dGVMZW5ndGggLSBwb3NpdGlvbiwgTUFYX1BBWUxPQURfU0laRSk7CiAgICAgIGNvbnN0IGNodW5rID0gbmV3IFVpbnQ4QXJyYXkoZmlsZURhdGEsIHBvc2l0aW9uLCBsZW5ndGgpOwogICAgICBwb3NpdGlvbiArPSBsZW5ndGg7CgogICAgICBjb25zdCBiYXNlNjQgPSBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgY2h1bmspKTsKICAgICAgeWllbGQgewogICAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgICBhY3Rpb246ICdhcHBlbmQnLAogICAgICAgICAgZmlsZTogZmlsZS5uYW1lLAogICAgICAgICAgZGF0YTogYmFzZTY0LAogICAgICAgIH0sCiAgICAgIH07CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPQogICAgICAgICAgYCR7TWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCl9JSBkb25lYDsKICAgIH0KICB9CgogIC8vIEFsbCBkb25lLgogIHlpZWxkIHsKICAgIHJlc3BvbnNlOiB7CiAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgIH0KICB9Owp9CgpzY29wZS5nb29nbGUgPSBzY29wZS5nb29nbGUgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYiA9IHNjb3BlLmdvb2dsZS5jb2xhYiB8fCB7fTsKc2NvcGUuZ29vZ2xlLmNvbGFiLl9maWxlcyA9IHsKICBfdXBsb2FkRmlsZXMsCiAgX3VwbG9hZEZpbGVzQ29udGludWUsCn07Cn0pKHNlbGYpOwo=",
              "ok": true,
              "headers": [
                [
                  "content-type",
                  "application/javascript"
                ]
              ],
              "status": 200,
              "status_text": ""
            }
          },
          "base_uri": "https://localhost:8080/",
          "height": 75
        }
      },
      "source": [
        "from google.colab import files\n",
        "uploaded = files.upload()"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-4037f9aa-f425-41e6-9516-b90fec9cb862\" name=\"files[]\" multiple disabled />\n",
              "     <output id=\"result-4037f9aa-f425-41e6-9516-b90fec9cb862\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script src=\"/nbextensions/google.colab/files.js\"></script> "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Saving kaggle.json to kaggle.json\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QWqHaH6JL2FL",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "!pip install -q kaggle"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "63pmvtuDMJiS",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "!mkdir -p ~/.kaggle"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d8R4DSWPMXcU",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "!cp kaggle.json ~/.kaggle"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fOguymW-MkJV",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "!chmod 600 /root/.kaggle/kaggle.json"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-RHsA6nIMtmG",
        "colab_type": "code",
        "outputId": "a46aa7b9-1627-4695-cbdc-86fea2fdc543",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 69
        }
      },
      "source": [
        "!kaggle datasets download -d uciml/breast-cancer-wisconsin-data"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Downloading breast-cancer-wisconsin-data.zip to /content\n",
            "\r  0% 0.00/48.6k [00:00<?, ?B/s]\n",
            "\r100% 48.6k/48.6k [00:00<00:00, 44.7MB/s]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZAhalqtVM-BO",
        "colab_type": "code",
        "outputId": "dd35c04d-ab96-4c74-c35b-53486e9b46db",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        }
      },
      "source": [
        "!unzip \\*.zip"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Archive:  breast-cancer-wisconsin-data.zip\n",
            "  inflating: data.csv                \n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eVMArKvaNCw4",
        "colab_type": "code",
        "outputId": "c867575b-4040-4f14-8d61-1929eeb1206f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        }
      },
      "source": [
        "ls"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "breast-cancer-wisconsin-data.zip  data.csv  kaggle.json  \u001b[0m\u001b[01;34msample_data\u001b[0m/\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "u-dJdvSQNWg6",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "df = pd.read_csv('data.csv')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2gyZSJYvNcF1",
        "colab_type": "code",
        "outputId": "bf675c90-3950-477b-f07a-9dff38f3243d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "df.head().T"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>id</th>\n",
              "      <td>842302</td>\n",
              "      <td>842517</td>\n",
              "      <td>84300903</td>\n",
              "      <td>84348301</td>\n",
              "      <td>84358402</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>diagnosis</th>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>radius_mean</th>\n",
              "      <td>17.99</td>\n",
              "      <td>20.57</td>\n",
              "      <td>19.69</td>\n",
              "      <td>11.42</td>\n",
              "      <td>20.29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>texture_mean</th>\n",
              "      <td>10.38</td>\n",
              "      <td>17.77</td>\n",
              "      <td>21.25</td>\n",
              "      <td>20.38</td>\n",
              "      <td>14.34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>perimeter_mean</th>\n",
              "      <td>122.8</td>\n",
              "      <td>132.9</td>\n",
              "      <td>130</td>\n",
              "      <td>77.58</td>\n",
              "      <td>135.1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>area_mean</th>\n",
              "      <td>1001</td>\n",
              "      <td>1326</td>\n",
              "      <td>1203</td>\n",
              "      <td>386.1</td>\n",
              "      <td>1297</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>smoothness_mean</th>\n",
              "      <td>0.1184</td>\n",
              "      <td>0.08474</td>\n",
              "      <td>0.1096</td>\n",
              "      <td>0.1425</td>\n",
              "      <td>0.1003</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>compactness_mean</th>\n",
              "      <td>0.2776</td>\n",
              "      <td>0.07864</td>\n",
              "      <td>0.1599</td>\n",
              "      <td>0.2839</td>\n",
              "      <td>0.1328</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>concavity_mean</th>\n",
              "      <td>0.3001</td>\n",
              "      <td>0.0869</td>\n",
              "      <td>0.1974</td>\n",
              "      <td>0.2414</td>\n",
              "      <td>0.198</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>concave points_mean</th>\n",
              "      <td>0.1471</td>\n",
              "      <td>0.07017</td>\n",
              "      <td>0.1279</td>\n",
              "      <td>0.1052</td>\n",
              "      <td>0.1043</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>symmetry_mean</th>\n",
              "      <td>0.2419</td>\n",
              "      <td>0.1812</td>\n",
              "      <td>0.2069</td>\n",
              "      <td>0.2597</td>\n",
              "      <td>0.1809</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>fractal_dimension_mean</th>\n",
              "      <td>0.07871</td>\n",
              "      <td>0.05667</td>\n",
              "      <td>0.05999</td>\n",
              "      <td>0.09744</td>\n",
              "      <td>0.05883</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>radius_se</th>\n",
              "      <td>1.095</td>\n",
              "      <td>0.5435</td>\n",
              "      <td>0.7456</td>\n",
              "      <td>0.4956</td>\n",
              "      <td>0.7572</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>texture_se</th>\n",
              "      <td>0.9053</td>\n",
              "      <td>0.7339</td>\n",
              "      <td>0.7869</td>\n",
              "      <td>1.156</td>\n",
              "      <td>0.7813</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>perimeter_se</th>\n",
              "      <td>8.589</td>\n",
              "      <td>3.398</td>\n",
              "      <td>4.585</td>\n",
              "      <td>3.445</td>\n",
              "      <td>5.438</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>area_se</th>\n",
              "      <td>153.4</td>\n",
              "      <td>74.08</td>\n",
              "      <td>94.03</td>\n",
              "      <td>27.23</td>\n",
              "      <td>94.44</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>smoothness_se</th>\n",
              "      <td>0.006399</td>\n",
              "      <td>0.005225</td>\n",
              "      <td>0.00615</td>\n",
              "      <td>0.00911</td>\n",
              "      <td>0.01149</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>compactness_se</th>\n",
              "      <td>0.04904</td>\n",
              "      <td>0.01308</td>\n",
              "      <td>0.04006</td>\n",
              "      <td>0.07458</td>\n",
              "      <td>0.02461</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>concavity_se</th>\n",
              "      <td>0.05373</td>\n",
              "      <td>0.0186</td>\n",
              "      <td>0.03832</td>\n",
              "      <td>0.05661</td>\n",
              "      <td>0.05688</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>concave points_se</th>\n",
              "      <td>0.01587</td>\n",
              "      <td>0.0134</td>\n",
              "      <td>0.02058</td>\n",
              "      <td>0.01867</td>\n",
              "      <td>0.01885</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>symmetry_se</th>\n",
              "      <td>0.03003</td>\n",
              "      <td>0.01389</td>\n",
              "      <td>0.0225</td>\n",
              "      <td>0.05963</td>\n",
              "      <td>0.01756</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>fractal_dimension_se</th>\n",
              "      <td>0.006193</td>\n",
              "      <td>0.003532</td>\n",
              "      <td>0.004571</td>\n",
              "      <td>0.009208</td>\n",
              "      <td>0.005115</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>radius_worst</th>\n",
              "      <td>25.38</td>\n",
              "      <td>24.99</td>\n",
              "      <td>23.57</td>\n",
              "      <td>14.91</td>\n",
              "      <td>22.54</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>texture_worst</th>\n",
              "      <td>17.33</td>\n",
              "      <td>23.41</td>\n",
              "      <td>25.53</td>\n",
              "      <td>26.5</td>\n",
              "      <td>16.67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>perimeter_worst</th>\n",
              "      <td>184.6</td>\n",
              "      <td>158.8</td>\n",
              "      <td>152.5</td>\n",
              "      <td>98.87</td>\n",
              "      <td>152.2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>area_worst</th>\n",
              "      <td>2019</td>\n",
              "      <td>1956</td>\n",
              "      <td>1709</td>\n",
              "      <td>567.7</td>\n",
              "      <td>1575</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>smoothness_worst</th>\n",
              "      <td>0.1622</td>\n",
              "      <td>0.1238</td>\n",
              "      <td>0.1444</td>\n",
              "      <td>0.2098</td>\n",
              "      <td>0.1374</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>compactness_worst</th>\n",
              "      <td>0.6656</td>\n",
              "      <td>0.1866</td>\n",
              "      <td>0.4245</td>\n",
              "      <td>0.8663</td>\n",
              "      <td>0.205</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>concavity_worst</th>\n",
              "      <td>0.7119</td>\n",
              "      <td>0.2416</td>\n",
              "      <td>0.4504</td>\n",
              "      <td>0.6869</td>\n",
              "      <td>0.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>concave points_worst</th>\n",
              "      <td>0.2654</td>\n",
              "      <td>0.186</td>\n",
              "      <td>0.243</td>\n",
              "      <td>0.2575</td>\n",
              "      <td>0.1625</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>symmetry_worst</th>\n",
              "      <td>0.4601</td>\n",
              "      <td>0.275</td>\n",
              "      <td>0.3613</td>\n",
              "      <td>0.6638</td>\n",
              "      <td>0.2364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>fractal_dimension_worst</th>\n",
              "      <td>0.1189</td>\n",
              "      <td>0.08902</td>\n",
              "      <td>0.08758</td>\n",
              "      <td>0.173</td>\n",
              "      <td>0.07678</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Unnamed: 32</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                                0         1         2         3         4\n",
              "id                         842302    842517  84300903  84348301  84358402\n",
              "diagnosis                       M         M         M         M         M\n",
              "radius_mean                 17.99     20.57     19.69     11.42     20.29\n",
              "texture_mean                10.38     17.77     21.25     20.38     14.34\n",
              "perimeter_mean              122.8     132.9       130     77.58     135.1\n",
              "area_mean                    1001      1326      1203     386.1      1297\n",
              "smoothness_mean            0.1184   0.08474    0.1096    0.1425    0.1003\n",
              "compactness_mean           0.2776   0.07864    0.1599    0.2839    0.1328\n",
              "concavity_mean             0.3001    0.0869    0.1974    0.2414     0.198\n",
              "concave points_mean        0.1471   0.07017    0.1279    0.1052    0.1043\n",
              "symmetry_mean              0.2419    0.1812    0.2069    0.2597    0.1809\n",
              "fractal_dimension_mean    0.07871   0.05667   0.05999   0.09744   0.05883\n",
              "radius_se                   1.095    0.5435    0.7456    0.4956    0.7572\n",
              "texture_se                 0.9053    0.7339    0.7869     1.156    0.7813\n",
              "perimeter_se                8.589     3.398     4.585     3.445     5.438\n",
              "area_se                     153.4     74.08     94.03     27.23     94.44\n",
              "smoothness_se            0.006399  0.005225   0.00615   0.00911   0.01149\n",
              "compactness_se            0.04904   0.01308   0.04006   0.07458   0.02461\n",
              "concavity_se              0.05373    0.0186   0.03832   0.05661   0.05688\n",
              "concave points_se         0.01587    0.0134   0.02058   0.01867   0.01885\n",
              "symmetry_se               0.03003   0.01389    0.0225   0.05963   0.01756\n",
              "fractal_dimension_se     0.006193  0.003532  0.004571  0.009208  0.005115\n",
              "radius_worst                25.38     24.99     23.57     14.91     22.54\n",
              "texture_worst               17.33     23.41     25.53      26.5     16.67\n",
              "perimeter_worst             184.6     158.8     152.5     98.87     152.2\n",
              "area_worst                   2019      1956      1709     567.7      1575\n",
              "smoothness_worst           0.1622    0.1238    0.1444    0.2098    0.1374\n",
              "compactness_worst          0.6656    0.1866    0.4245    0.8663     0.205\n",
              "concavity_worst            0.7119    0.2416    0.4504    0.6869       0.4\n",
              "concave points_worst       0.2654     0.186     0.243    0.2575    0.1625\n",
              "symmetry_worst             0.4601     0.275    0.3613    0.6638    0.2364\n",
              "fractal_dimension_worst    0.1189   0.08902   0.08758     0.173   0.07678\n",
              "Unnamed: 32                   NaN       NaN       NaN       NaN       NaN"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BPjt-4meObfs",
        "colab_type": "text"
      },
      "source": [
        "**id** and **Unnamed: 32** is not required"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yl1rtgo2Ndnw",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "df.drop(['id','Unnamed: 32'],axis=1,inplace=True)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "npqsjWtmOyhB",
        "colab_type": "code",
        "outputId": "9317dd50-c545-4f55-a3b3-61f49d3da86f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 641
        }
      },
      "source": [
        "df.info()"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 569 entries, 0 to 568\n",
            "Data columns (total 31 columns):\n",
            "diagnosis                  569 non-null object\n",
            "radius_mean                569 non-null float64\n",
            "texture_mean               569 non-null float64\n",
            "perimeter_mean             569 non-null float64\n",
            "area_mean                  569 non-null float64\n",
            "smoothness_mean            569 non-null float64\n",
            "compactness_mean           569 non-null float64\n",
            "concavity_mean             569 non-null float64\n",
            "concave points_mean        569 non-null float64\n",
            "symmetry_mean              569 non-null float64\n",
            "fractal_dimension_mean     569 non-null float64\n",
            "radius_se                  569 non-null float64\n",
            "texture_se                 569 non-null float64\n",
            "perimeter_se               569 non-null float64\n",
            "area_se                    569 non-null float64\n",
            "smoothness_se              569 non-null float64\n",
            "compactness_se             569 non-null float64\n",
            "concavity_se               569 non-null float64\n",
            "concave points_se          569 non-null float64\n",
            "symmetry_se                569 non-null float64\n",
            "fractal_dimension_se       569 non-null float64\n",
            "radius_worst               569 non-null float64\n",
            "texture_worst              569 non-null float64\n",
            "perimeter_worst            569 non-null float64\n",
            "area_worst                 569 non-null float64\n",
            "smoothness_worst           569 non-null float64\n",
            "compactness_worst          569 non-null float64\n",
            "concavity_worst            569 non-null float64\n",
            "concave points_worst       569 non-null float64\n",
            "symmetry_worst             569 non-null float64\n",
            "fractal_dimension_worst    569 non-null float64\n",
            "dtypes: float64(30), object(1)\n",
            "memory usage: 137.9+ KB\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Hq22v8q4PR0l",
        "colab_type": "text"
      },
      "source": [
        "Only **diagnosis** in a non-numerical variable and no missing value in the dataset"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "R4rdI2H9O31Y",
        "colab_type": "code",
        "outputId": "e11549f3-59d7-4c64-db4d-187d3eef7360",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        }
      },
      "source": [
        "df.diagnosis.unique()"
      ],
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array(['M', 'B'], dtype=object)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ECwrXR5lUFcP",
        "colab_type": "text"
      },
      "source": [
        "Here **M** represents **Malignant** and **B** represents **Benign**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "v0xdlRpUQiX3",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "df.diagnosis  = np.where(df.diagnosis=='M',1,0)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1f90DUV_Qy8T",
        "colab_type": "code",
        "outputId": "465f19e9-98e0-403b-a2f7-aa92b6608cc3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 641
        }
      },
      "source": [
        "df.info()"
      ],
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 569 entries, 0 to 568\n",
            "Data columns (total 31 columns):\n",
            "diagnosis                  569 non-null int64\n",
            "radius_mean                569 non-null float64\n",
            "texture_mean               569 non-null float64\n",
            "perimeter_mean             569 non-null float64\n",
            "area_mean                  569 non-null float64\n",
            "smoothness_mean            569 non-null float64\n",
            "compactness_mean           569 non-null float64\n",
            "concavity_mean             569 non-null float64\n",
            "concave points_mean        569 non-null float64\n",
            "symmetry_mean              569 non-null float64\n",
            "fractal_dimension_mean     569 non-null float64\n",
            "radius_se                  569 non-null float64\n",
            "texture_se                 569 non-null float64\n",
            "perimeter_se               569 non-null float64\n",
            "area_se                    569 non-null float64\n",
            "smoothness_se              569 non-null float64\n",
            "compactness_se             569 non-null float64\n",
            "concavity_se               569 non-null float64\n",
            "concave points_se          569 non-null float64\n",
            "symmetry_se                569 non-null float64\n",
            "fractal_dimension_se       569 non-null float64\n",
            "radius_worst               569 non-null float64\n",
            "texture_worst              569 non-null float64\n",
            "perimeter_worst            569 non-null float64\n",
            "area_worst                 569 non-null float64\n",
            "smoothness_worst           569 non-null float64\n",
            "compactness_worst          569 non-null float64\n",
            "concavity_worst            569 non-null float64\n",
            "concave points_worst       569 non-null float64\n",
            "symmetry_worst             569 non-null float64\n",
            "fractal_dimension_worst    569 non-null float64\n",
            "dtypes: float64(30), int64(1)\n",
            "memory usage: 137.9 KB\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Zpa6vDz5Q1ZT",
        "colab_type": "code",
        "outputId": "5b243116-33d1-467b-a053-f7b59dd4f0f9",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 239
        }
      },
      "source": [
        "df.head()"
      ],
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>diagnosis</th>\n",
              "      <th>radius_mean</th>\n",
              "      <th>texture_mean</th>\n",
              "      <th>perimeter_mean</th>\n",
              "      <th>area_mean</th>\n",
              "      <th>smoothness_mean</th>\n",
              "      <th>compactness_mean</th>\n",
              "      <th>concavity_mean</th>\n",
              "      <th>concave points_mean</th>\n",
              "      <th>symmetry_mean</th>\n",
              "      <th>fractal_dimension_mean</th>\n",
              "      <th>radius_se</th>\n",
              "      <th>texture_se</th>\n",
              "      <th>perimeter_se</th>\n",
              "      <th>area_se</th>\n",
              "      <th>smoothness_se</th>\n",
              "      <th>compactness_se</th>\n",
              "      <th>concavity_se</th>\n",
              "      <th>concave points_se</th>\n",
              "      <th>symmetry_se</th>\n",
              "      <th>fractal_dimension_se</th>\n",
              "      <th>radius_worst</th>\n",
              "      <th>texture_worst</th>\n",
              "      <th>perimeter_worst</th>\n",
              "      <th>area_worst</th>\n",
              "      <th>smoothness_worst</th>\n",
              "      <th>compactness_worst</th>\n",
              "      <th>concavity_worst</th>\n",
              "      <th>concave points_worst</th>\n",
              "      <th>symmetry_worst</th>\n",
              "      <th>fractal_dimension_worst</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>17.99</td>\n",
              "      <td>10.38</td>\n",
              "      <td>122.80</td>\n",
              "      <td>1001.0</td>\n",
              "      <td>0.11840</td>\n",
              "      <td>0.27760</td>\n",
              "      <td>0.3001</td>\n",
              "      <td>0.14710</td>\n",
              "      <td>0.2419</td>\n",
              "      <td>0.07871</td>\n",
              "      <td>1.0950</td>\n",
              "      <td>0.9053</td>\n",
              "      <td>8.589</td>\n",
              "      <td>153.40</td>\n",
              "      <td>0.006399</td>\n",
              "      <td>0.04904</td>\n",
              "      <td>0.05373</td>\n",
              "      <td>0.01587</td>\n",
              "      <td>0.03003</td>\n",
              "      <td>0.006193</td>\n",
              "      <td>25.38</td>\n",
              "      <td>17.33</td>\n",
              "      <td>184.60</td>\n",
              "      <td>2019.0</td>\n",
              "      <td>0.1622</td>\n",
              "      <td>0.6656</td>\n",
              "      <td>0.7119</td>\n",
              "      <td>0.2654</td>\n",
              "      <td>0.4601</td>\n",
              "      <td>0.11890</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>20.57</td>\n",
              "      <td>17.77</td>\n",
              "      <td>132.90</td>\n",
              "      <td>1326.0</td>\n",
              "      <td>0.08474</td>\n",
              "      <td>0.07864</td>\n",
              "      <td>0.0869</td>\n",
              "      <td>0.07017</td>\n",
              "      <td>0.1812</td>\n",
              "      <td>0.05667</td>\n",
              "      <td>0.5435</td>\n",
              "      <td>0.7339</td>\n",
              "      <td>3.398</td>\n",
              "      <td>74.08</td>\n",
              "      <td>0.005225</td>\n",
              "      <td>0.01308</td>\n",
              "      <td>0.01860</td>\n",
              "      <td>0.01340</td>\n",
              "      <td>0.01389</td>\n",
              "      <td>0.003532</td>\n",
              "      <td>24.99</td>\n",
              "      <td>23.41</td>\n",
              "      <td>158.80</td>\n",
              "      <td>1956.0</td>\n",
              "      <td>0.1238</td>\n",
              "      <td>0.1866</td>\n",
              "      <td>0.2416</td>\n",
              "      <td>0.1860</td>\n",
              "      <td>0.2750</td>\n",
              "      <td>0.08902</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1</td>\n",
              "      <td>19.69</td>\n",
              "      <td>21.25</td>\n",
              "      <td>130.00</td>\n",
              "      <td>1203.0</td>\n",
              "      <td>0.10960</td>\n",
              "      <td>0.15990</td>\n",
              "      <td>0.1974</td>\n",
              "      <td>0.12790</td>\n",
              "      <td>0.2069</td>\n",
              "      <td>0.05999</td>\n",
              "      <td>0.7456</td>\n",
              "      <td>0.7869</td>\n",
              "      <td>4.585</td>\n",
              "      <td>94.03</td>\n",
              "      <td>0.006150</td>\n",
              "      <td>0.04006</td>\n",
              "      <td>0.03832</td>\n",
              "      <td>0.02058</td>\n",
              "      <td>0.02250</td>\n",
              "      <td>0.004571</td>\n",
              "      <td>23.57</td>\n",
              "      <td>25.53</td>\n",
              "      <td>152.50</td>\n",
              "      <td>1709.0</td>\n",
              "      <td>0.1444</td>\n",
              "      <td>0.4245</td>\n",
              "      <td>0.4504</td>\n",
              "      <td>0.2430</td>\n",
              "      <td>0.3613</td>\n",
              "      <td>0.08758</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>11.42</td>\n",
              "      <td>20.38</td>\n",
              "      <td>77.58</td>\n",
              "      <td>386.1</td>\n",
              "      <td>0.14250</td>\n",
              "      <td>0.28390</td>\n",
              "      <td>0.2414</td>\n",
              "      <td>0.10520</td>\n",
              "      <td>0.2597</td>\n",
              "      <td>0.09744</td>\n",
              "      <td>0.4956</td>\n",
              "      <td>1.1560</td>\n",
              "      <td>3.445</td>\n",
              "      <td>27.23</td>\n",
              "      <td>0.009110</td>\n",
              "      <td>0.07458</td>\n",
              "      <td>0.05661</td>\n",
              "      <td>0.01867</td>\n",
              "      <td>0.05963</td>\n",
              "      <td>0.009208</td>\n",
              "      <td>14.91</td>\n",
              "      <td>26.50</td>\n",
              "      <td>98.87</td>\n",
              "      <td>567.7</td>\n",
              "      <td>0.2098</td>\n",
              "      <td>0.8663</td>\n",
              "      <td>0.6869</td>\n",
              "      <td>0.2575</td>\n",
              "      <td>0.6638</td>\n",
              "      <td>0.17300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1</td>\n",
              "      <td>20.29</td>\n",
              "      <td>14.34</td>\n",
              "      <td>135.10</td>\n",
              "      <td>1297.0</td>\n",
              "      <td>0.10030</td>\n",
              "      <td>0.13280</td>\n",
              "      <td>0.1980</td>\n",
              "      <td>0.10430</td>\n",
              "      <td>0.1809</td>\n",
              "      <td>0.05883</td>\n",
              "      <td>0.7572</td>\n",
              "      <td>0.7813</td>\n",
              "      <td>5.438</td>\n",
              "      <td>94.44</td>\n",
              "      <td>0.011490</td>\n",
              "      <td>0.02461</td>\n",
              "      <td>0.05688</td>\n",
              "      <td>0.01885</td>\n",
              "      <td>0.01756</td>\n",
              "      <td>0.005115</td>\n",
              "      <td>22.54</td>\n",
              "      <td>16.67</td>\n",
              "      <td>152.20</td>\n",
              "      <td>1575.0</td>\n",
              "      <td>0.1374</td>\n",
              "      <td>0.2050</td>\n",
              "      <td>0.4000</td>\n",
              "      <td>0.1625</td>\n",
              "      <td>0.2364</td>\n",
              "      <td>0.07678</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   diagnosis  radius_mean  ...  symmetry_worst  fractal_dimension_worst\n",
              "0          1        17.99  ...          0.4601                  0.11890\n",
              "1          1        20.57  ...          0.2750                  0.08902\n",
              "2          1        19.69  ...          0.3613                  0.08758\n",
              "3          1        11.42  ...          0.6638                  0.17300\n",
              "4          1        20.29  ...          0.2364                  0.07678\n",
              "\n",
              "[5 rows x 31 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JF72Q7EIRTxG",
        "colab_type": "code",
        "outputId": "43d250dd-265e-45fb-d621-868afc934054",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 331
        }
      },
      "source": [
        "df.describe()"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>diagnosis</th>\n",
              "      <th>radius_mean</th>\n",
              "      <th>texture_mean</th>\n",
              "      <th>perimeter_mean</th>\n",
              "      <th>area_mean</th>\n",
              "      <th>smoothness_mean</th>\n",
              "      <th>compactness_mean</th>\n",
              "      <th>concavity_mean</th>\n",
              "      <th>concave points_mean</th>\n",
              "      <th>symmetry_mean</th>\n",
              "      <th>fractal_dimension_mean</th>\n",
              "      <th>radius_se</th>\n",
              "      <th>texture_se</th>\n",
              "      <th>perimeter_se</th>\n",
              "      <th>area_se</th>\n",
              "      <th>smoothness_se</th>\n",
              "      <th>compactness_se</th>\n",
              "      <th>concavity_se</th>\n",
              "      <th>concave points_se</th>\n",
              "      <th>symmetry_se</th>\n",
              "      <th>fractal_dimension_se</th>\n",
              "      <th>radius_worst</th>\n",
              "      <th>texture_worst</th>\n",
              "      <th>perimeter_worst</th>\n",
              "      <th>area_worst</th>\n",
              "      <th>smoothness_worst</th>\n",
              "      <th>compactness_worst</th>\n",
              "      <th>concavity_worst</th>\n",
              "      <th>concave points_worst</th>\n",
              "      <th>symmetry_worst</th>\n",
              "      <th>fractal_dimension_worst</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "      <td>569.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>0.372583</td>\n",
              "      <td>14.127292</td>\n",
              "      <td>19.289649</td>\n",
              "      <td>91.969033</td>\n",
              "      <td>654.889104</td>\n",
              "      <td>0.096360</td>\n",
              "      <td>0.104341</td>\n",
              "      <td>0.088799</td>\n",
              "      <td>0.048919</td>\n",
              "      <td>0.181162</td>\n",
              "      <td>0.062798</td>\n",
              "      <td>0.405172</td>\n",
              "      <td>1.216853</td>\n",
              "      <td>2.866059</td>\n",
              "      <td>40.337079</td>\n",
              "      <td>0.007041</td>\n",
              "      <td>0.025478</td>\n",
              "      <td>0.031894</td>\n",
              "      <td>0.011796</td>\n",
              "      <td>0.020542</td>\n",
              "      <td>0.003795</td>\n",
              "      <td>16.269190</td>\n",
              "      <td>25.677223</td>\n",
              "      <td>107.261213</td>\n",
              "      <td>880.583128</td>\n",
              "      <td>0.132369</td>\n",
              "      <td>0.254265</td>\n",
              "      <td>0.272188</td>\n",
              "      <td>0.114606</td>\n",
              "      <td>0.290076</td>\n",
              "      <td>0.083946</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>0.483918</td>\n",
              "      <td>3.524049</td>\n",
              "      <td>4.301036</td>\n",
              "      <td>24.298981</td>\n",
              "      <td>351.914129</td>\n",
              "      <td>0.014064</td>\n",
              "      <td>0.052813</td>\n",
              "      <td>0.079720</td>\n",
              "      <td>0.038803</td>\n",
              "      <td>0.027414</td>\n",
              "      <td>0.007060</td>\n",
              "      <td>0.277313</td>\n",
              "      <td>0.551648</td>\n",
              "      <td>2.021855</td>\n",
              "      <td>45.491006</td>\n",
              "      <td>0.003003</td>\n",
              "      <td>0.017908</td>\n",
              "      <td>0.030186</td>\n",
              "      <td>0.006170</td>\n",
              "      <td>0.008266</td>\n",
              "      <td>0.002646</td>\n",
              "      <td>4.833242</td>\n",
              "      <td>6.146258</td>\n",
              "      <td>33.602542</td>\n",
              "      <td>569.356993</td>\n",
              "      <td>0.022832</td>\n",
              "      <td>0.157336</td>\n",
              "      <td>0.208624</td>\n",
              "      <td>0.065732</td>\n",
              "      <td>0.061867</td>\n",
              "      <td>0.018061</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>6.981000</td>\n",
              "      <td>9.710000</td>\n",
              "      <td>43.790000</td>\n",
              "      <td>143.500000</td>\n",
              "      <td>0.052630</td>\n",
              "      <td>0.019380</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.106000</td>\n",
              "      <td>0.049960</td>\n",
              "      <td>0.111500</td>\n",
              "      <td>0.360200</td>\n",
              "      <td>0.757000</td>\n",
              "      <td>6.802000</td>\n",
              "      <td>0.001713</td>\n",
              "      <td>0.002252</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.007882</td>\n",
              "      <td>0.000895</td>\n",
              "      <td>7.930000</td>\n",
              "      <td>12.020000</td>\n",
              "      <td>50.410000</td>\n",
              "      <td>185.200000</td>\n",
              "      <td>0.071170</td>\n",
              "      <td>0.027290</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.156500</td>\n",
              "      <td>0.055040</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>11.700000</td>\n",
              "      <td>16.170000</td>\n",
              "      <td>75.170000</td>\n",
              "      <td>420.300000</td>\n",
              "      <td>0.086370</td>\n",
              "      <td>0.064920</td>\n",
              "      <td>0.029560</td>\n",
              "      <td>0.020310</td>\n",
              "      <td>0.161900</td>\n",
              "      <td>0.057700</td>\n",
              "      <td>0.232400</td>\n",
              "      <td>0.833900</td>\n",
              "      <td>1.606000</td>\n",
              "      <td>17.850000</td>\n",
              "      <td>0.005169</td>\n",
              "      <td>0.013080</td>\n",
              "      <td>0.015090</td>\n",
              "      <td>0.007638</td>\n",
              "      <td>0.015160</td>\n",
              "      <td>0.002248</td>\n",
              "      <td>13.010000</td>\n",
              "      <td>21.080000</td>\n",
              "      <td>84.110000</td>\n",
              "      <td>515.300000</td>\n",
              "      <td>0.116600</td>\n",
              "      <td>0.147200</td>\n",
              "      <td>0.114500</td>\n",
              "      <td>0.064930</td>\n",
              "      <td>0.250400</td>\n",
              "      <td>0.071460</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>13.370000</td>\n",
              "      <td>18.840000</td>\n",
              "      <td>86.240000</td>\n",
              "      <td>551.100000</td>\n",
              "      <td>0.095870</td>\n",
              "      <td>0.092630</td>\n",
              "      <td>0.061540</td>\n",
              "      <td>0.033500</td>\n",
              "      <td>0.179200</td>\n",
              "      <td>0.061540</td>\n",
              "      <td>0.324200</td>\n",
              "      <td>1.108000</td>\n",
              "      <td>2.287000</td>\n",
              "      <td>24.530000</td>\n",
              "      <td>0.006380</td>\n",
              "      <td>0.020450</td>\n",
              "      <td>0.025890</td>\n",
              "      <td>0.010930</td>\n",
              "      <td>0.018730</td>\n",
              "      <td>0.003187</td>\n",
              "      <td>14.970000</td>\n",
              "      <td>25.410000</td>\n",
              "      <td>97.660000</td>\n",
              "      <td>686.500000</td>\n",
              "      <td>0.131300</td>\n",
              "      <td>0.211900</td>\n",
              "      <td>0.226700</td>\n",
              "      <td>0.099930</td>\n",
              "      <td>0.282200</td>\n",
              "      <td>0.080040</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>15.780000</td>\n",
              "      <td>21.800000</td>\n",
              "      <td>104.100000</td>\n",
              "      <td>782.700000</td>\n",
              "      <td>0.105300</td>\n",
              "      <td>0.130400</td>\n",
              "      <td>0.130700</td>\n",
              "      <td>0.074000</td>\n",
              "      <td>0.195700</td>\n",
              "      <td>0.066120</td>\n",
              "      <td>0.478900</td>\n",
              "      <td>1.474000</td>\n",
              "      <td>3.357000</td>\n",
              "      <td>45.190000</td>\n",
              "      <td>0.008146</td>\n",
              "      <td>0.032450</td>\n",
              "      <td>0.042050</td>\n",
              "      <td>0.014710</td>\n",
              "      <td>0.023480</td>\n",
              "      <td>0.004558</td>\n",
              "      <td>18.790000</td>\n",
              "      <td>29.720000</td>\n",
              "      <td>125.400000</td>\n",
              "      <td>1084.000000</td>\n",
              "      <td>0.146000</td>\n",
              "      <td>0.339100</td>\n",
              "      <td>0.382900</td>\n",
              "      <td>0.161400</td>\n",
              "      <td>0.317900</td>\n",
              "      <td>0.092080</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>28.110000</td>\n",
              "      <td>39.280000</td>\n",
              "      <td>188.500000</td>\n",
              "      <td>2501.000000</td>\n",
              "      <td>0.163400</td>\n",
              "      <td>0.345400</td>\n",
              "      <td>0.426800</td>\n",
              "      <td>0.201200</td>\n",
              "      <td>0.304000</td>\n",
              "      <td>0.097440</td>\n",
              "      <td>2.873000</td>\n",
              "      <td>4.885000</td>\n",
              "      <td>21.980000</td>\n",
              "      <td>542.200000</td>\n",
              "      <td>0.031130</td>\n",
              "      <td>0.135400</td>\n",
              "      <td>0.396000</td>\n",
              "      <td>0.052790</td>\n",
              "      <td>0.078950</td>\n",
              "      <td>0.029840</td>\n",
              "      <td>36.040000</td>\n",
              "      <td>49.540000</td>\n",
              "      <td>251.200000</td>\n",
              "      <td>4254.000000</td>\n",
              "      <td>0.222600</td>\n",
              "      <td>1.058000</td>\n",
              "      <td>1.252000</td>\n",
              "      <td>0.291000</td>\n",
              "      <td>0.663800</td>\n",
              "      <td>0.207500</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        diagnosis  radius_mean  ...  symmetry_worst  fractal_dimension_worst\n",
              "count  569.000000   569.000000  ...      569.000000               569.000000\n",
              "mean     0.372583    14.127292  ...        0.290076                 0.083946\n",
              "std      0.483918     3.524049  ...        0.061867                 0.018061\n",
              "min      0.000000     6.981000  ...        0.156500                 0.055040\n",
              "25%      0.000000    11.700000  ...        0.250400                 0.071460\n",
              "50%      0.000000    13.370000  ...        0.282200                 0.080040\n",
              "75%      1.000000    15.780000  ...        0.317900                 0.092080\n",
              "max      1.000000    28.110000  ...        0.663800                 0.207500\n",
              "\n",
              "[8 rows x 31 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xuHzwyw_RYwh",
        "colab_type": "code",
        "outputId": "87f4ac4d-5669-4f71-f43f-a284e6741c60",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 269
        }
      },
      "source": [
        "plt.hist(df.diagnosis,color='green')\n",
        "plt.grid(color='black', linestyle='-.', linewidth=1)"
      ],
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n/gAAAABJRU5ErkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "niR4QrroWpb0",
        "colab_type": "text"
      },
      "source": [
        "Above figure shows that there are more than **350** cases of the **Malignant(M=1)** and more than **200** cases of the **Benign(B=0)** in a given dataset"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "xfcfzoA4Kx2Z",
        "colab_type": "text"
      },
      "source": [
        "## Splitting the dataset for the Evaluation"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aoac463RD8IA",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "features = df.drop('diagnosis',axis=1)              \n",
        "labels = df['diagnosis']\n",
        "x_train,x_test,y_train,y_test = train_test_split(features,labels,test_size = 0.2,random_state = 10)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6LHglF34Em44",
        "colab_type": "text"
      },
      "source": [
        "## Model Evaultion"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "z-DTch1wEqwV",
        "colab_type": "text"
      },
      "source": [
        "### 1. Linear Regression"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BcXtzJaYDRsZ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from sklearn.linear_model import LinearRegression\n",
        "lm=LinearRegression()\n",
        "lm.fit(x_train,y_train)\n",
        "Y_lr = lm.predict(x_test)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gkIOUgHJDnyf",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "413292ad-908c-4a16-ea3b-515f2649dffe"
      },
      "source": [
        "lm.intercept_"
      ],
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "-2.2018121130236867"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RuhE8aoADsyl",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 156
        },
        "outputId": "6e273ee4-1739-4d11-9105-3f9aa123a072"
      },
      "source": [
        "lm.coef_"
      ],
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([-2.17772056e-01,  4.54546867e-03,  2.37398610e-02,  3.17834750e-04,\n",
              "        8.46891371e-02, -4.22203525e+00,  1.39799728e+00,  2.14183303e+00,\n",
              "        1.02709200e-01,  3.32616096e-02,  4.34955932e-01, -6.75847233e-03,\n",
              "       -2.25202577e-02, -9.23217886e-04,  1.58543207e+01,  6.49034090e-02,\n",
              "       -3.56546799e+00,  1.05679513e+01,  1.69734069e+00, -7.14644016e+00,\n",
              "        1.95183121e-01,  7.15937520e-03, -2.43505057e-03, -1.01122332e-03,\n",
              "        5.42856861e-01,  6.71582941e-02,  3.81191215e-01,  4.64309895e-01,\n",
              "        5.56787546e-01,  4.30348309e+00])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pmOklob8Dul9",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 416
        },
        "outputId": "0c154b58-b66b-4b35-a5ce-a0107e35634f"
      },
      "source": [
        "Y_lr"
      ],
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 0.74091907, -0.14613829,  0.10619158,  1.08861418,  0.04148682,\n",
              "        0.10243075, -0.1407311 ,  0.24844254,  0.8499447 ,  0.97091432,\n",
              "        0.05814858,  0.12643278,  0.79353299,  0.04419008,  0.55008884,\n",
              "        0.72603979,  0.1268499 ,  0.21328822,  0.18313656,  0.25402725,\n",
              "        0.58939528,  0.36388192, -0.05726146,  0.16985811,  0.91563474,\n",
              "        1.06455561,  0.32240198,  0.81686512,  0.08954601,  0.40200985,\n",
              "        0.04013679,  0.34755236,  1.22270421,  0.01354329,  0.18992167,\n",
              "       -0.11539206,  0.01128881, -0.36600317,  0.18931094,  0.19561141,\n",
              "        0.04042312, -0.14023349,  0.09331533,  0.67789905,  0.06512759,\n",
              "        1.10892912,  0.64457981,  0.76807446,  0.62506223,  0.08810353,\n",
              "        0.26467016,  0.26803681,  0.71327853,  0.17115742,  0.06925355,\n",
              "        1.21178289,  0.65917677, -0.01958741,  0.21994174, -0.11827674,\n",
              "        0.65687749, -0.02574051,  0.65635854,  0.63263189, -0.17584262,\n",
              "        0.38566542,  0.19251489, -0.21348734,  0.60202659,  0.30390713,\n",
              "       -0.19362606, -0.10939148, -0.03522649, -0.45574712, -0.06846982,\n",
              "        0.8701572 , -0.16292628,  0.00243139,  0.70427108,  0.4485585 ,\n",
              "       -0.12133049,  0.11324186,  1.25513459,  0.19443501, -0.1456814 ,\n",
              "        0.11093697,  0.21177249,  0.23770405, -0.07957278,  0.37786285,\n",
              "        0.05324609,  0.11537583,  0.7958427 ,  0.44424736, -0.16058268,\n",
              "        0.04395955,  0.99428768, -0.28181246,  1.0857792 ,  0.22765045,\n",
              "        0.88868333,  0.31422328, -0.53822696,  0.0140356 , -0.14952188,\n",
              "       -0.29617927,  0.84647365,  1.15886369, -0.0698489 ,  0.03085297,\n",
              "       -0.01600763,  0.04776787,  1.47584582,  0.60131015])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HTHgZc1TFAfn",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "Yhat_lr = np.where(Y_lr>0.5,1,0)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "063czzoWFAjz",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "b522dc06-cd9a-41c6-bcbd-d8b72f4506d0"
      },
      "source": [
        "accuracy = sum(y_test==Yhat_lr)*100/len(y_test)\n",
        "accuracy"
      ],
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "96.49122807017544"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IcIOJe3_FAnH",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 69
        },
        "outputId": "9127a891-55e9-4f4a-f53d-ed0bb6111951"
      },
      "source": [
        "from sklearn.metrics import accuracy_score,precision_score,recall_score\n",
        "accuracy_lr  = round(accuracy_score(y_test,Yhat_lr),3)\n",
        "precision_lr = round(precision_score(y_test,Yhat_lr),3)\n",
        "recall_lr    = round(recall_score(y_test,Yhat_lr),3)\n",
        "print(\"Accuracy  : {}% \\nPrecision : {}% \\nRecall    : {}% \"\n",
        "      .format(accuracy_lr*100,precision_lr*100,recall_lr*100))"
      ],
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Accuracy  : 96.5% \n",
            "Precision : 100.0% \n",
            "Recall    : 89.7% \n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mo8SkzsUGdmv",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 313
        },
        "outputId": "8ce40b3b-b883-498c-a4b1-2b5e9320f072"
      },
      "source": [
        "sns.distplot(y_test,hist=False,color='r',label='Actual')\n",
        "plt.title('Actual v/s Predicted')\n",
        "sns.distplot(Yhat_lr,hist=False,color='b',label='Predicted')"
      ],
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f18e2256240>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 55
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FcZ2EWLiFldt",
        "colab_type": "text"
      },
      "source": [
        "### 2. Logistic Regression"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eZBKOQ21FAqM",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 72
        },
        "outputId": "aded7c4b-0090-433d-a6cd-56d7c23dd6bd"
      },
      "source": [
        "from sklearn.linear_model import LogisticRegression\n",
        "lgr = LogisticRegression()\n",
        "lgr.fit(x_train,y_train)\n",
        "Yhat_lgr = lgr.predict(x_test)"
      ],
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/sklearn/linear_model/logistic.py:432: FutureWarning: Default solver will be changed to 'lbfgs' in 0.22. Specify a solver to silence this warning.\n",
            "  FutureWarning)\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uYctT81LFbNi",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 69
        },
        "outputId": "231dc828-03cf-4e2b-9a3c-89ecffb68bf0"
      },
      "source": [
        "accuracy_lgr = round(accuracy_score(y_test,Yhat_lgr),3)\n",
        "precision_lgr = round(precision_score(y_test,Yhat_lgr),3)\n",
        "recall_lgr = round(recall_score(y_test,Yhat_lgr),3)\n",
        "print(\"Accuracy  : {}% \\nPrecision : {}% \\nRecall    : {}% \"\n",
        "      .format(accuracy_lgr*100,precision_lgr*100,recall_lgr*100))"
      ],
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Accuracy  : 93.89999999999999% \n",
            "Precision : 88.1% \n",
            "Recall    : 94.89999999999999% \n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "stv3TbC8GEcf",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 313
        },
        "outputId": "29b3035f-461b-46f3-b00a-5a61bb51c7cc"
      },
      "source": [
        "sns.distplot(y_test,hist=False,color='r',label='Actual')\n",
        "plt.title('Actual v/s Predicted')\n",
        "sns.distplot(Yhat_lgr,hist=False,color='b',label='Predicted')"
      ],
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f18e22a34e0>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 54
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\nrkJggg==\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "r-zi3jCRGzWF",
        "colab_type": "text"
      },
      "source": [
        "### 3. Decision Tree Classifier"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JdvLiQsrFbQH",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from sklearn.tree import DecisionTreeClassifier\n",
        "DTC = DecisionTreeClassifier()\n",
        "DTC.fit(x_train,y_train)\n",
        "Yhat_DTC = DTC.predict(x_test)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vLTEN9ZnFbY4",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 313
        },
        "outputId": "9cf5d35d-907c-4065-b3e0-bb0ba974eee7"
      },
      "source": [
        "sns.distplot(y_test,hist=False,color='r',label='Actual')\n",
        "plt.title('Actual v/s Predicted')\n",
        "sns.distplot(Yhat_DTC,hist=False,color='b',label='Predicted')"
      ],
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f18e21cd358>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 57
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXcAAAEWCAYAAACdaNcBAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4zLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvnQurowAAIABJREFUeJzs3Xd4VOXywPHvkID0jhUVVIoI0hVU\nqiBFL4qKggiI2MV6r1691mu79p8FFSyIFRQLIl2IgJTQFBBB6QhY6EiHJPP7YzYxhIQsySZns5nP\n8+QJOXuyZ7IJc959y7yiqjjnnIstRYIOwDnnXOR5cnfOuRjkyd0552KQJ3fnnItBntydcy4GeXJ3\nzrkY5MndOedikCd3V+CISGsRWRd0HJEkIqtFpF3o3/8Rkbfz4Zox9zq6v3lyd0dMRCaLyFYROSrM\n86uJiIpIfF7HFg4ROf5Ik5qIDBGR/SKyU0S2iMg3IlI7L+JT1adU9bowY3oiL2JwBZ8nd3dERKQa\n0AJQoEugweRcZ2BcDr7vWVUtDVQFNgBDMjspWm5irnDz5O6OVG8gEUtsfdI/ICIlROQFEVkjIttF\nZJqIlACmhk7ZFmr5NheRR0Xkw3Tfe1DrXkT6isgSEdkhIitF5MZwghORN0Tk+QzHvhKRu9Md6gyM\nCT32bxFZH7rOLyJyfnbXUNXdwMdA3dBzPCoin4nIhyLyF3CNiBQRkftEZIWIbBaRT0WkYrqYeoVe\np80i8kCGeDO+NueJyAwR2SYia0XkGhG5AegJ3Bt6Tb8OnXu8iHwuIhtFZJWI3J7ueUqEWvtbRWQx\n0DSc19QVTJ7c3ZHqDXwU+uggIseke+x5oDFwDlARuBdIAVqGHi+vqqVVdWYY19kAXASUBfoC/yci\njcL4vqHAlSIiACJSAbgAGBb6umgonm9EpBbQH2iqqmWADsDq7C4gIqWxxPpDusMXA58B5bHX5jbg\nEqAVcDywFXgt9P11gDeAXqHHKmHvBjK71snAWOBVoArQAJivqm+GrvNs6DX9h4gUAb4GFgAnAOcD\nd4pIh9DTPQKcGvroQIabs4stntxd2ETkPOBk4FNVnQesAK4KPVYEuBa4Q1XXq2qyqs5Q1X05uZaq\njlbVFWqmABOw7qDsfId1GaWeezkwU1V/C33dEligqjuAZOAooI6IFFXV1aq64jDP/S8R2QYsB0oD\n16R7bKaqjlDVFFXdA9wEPKCq60KvwaPA5aF3JpcDo1R1auixh7CbYGauAiaq6lBVPaCqm1V1fhbn\nNgWqqOpjqrpfVVcCbwHdQ49fATypqltUdS3wymF+VlfAeXJ3R6IPMEFVN4W+/pi/W3+VgeJYws81\nEekkIomhwcttWFdK5ey+T63M6TCgR+jQVVgLN1Val4yqLgfuxBLvBhEZJiLHH+bpn1fV8qp6rKp2\nyXAjWJvh3JOBL0NdKduAJdjN5BistZ52vqruAjZncc0TCf81PRk4PvWaoev+J3RNMl4XWBPm87oC\nyJO7C0uo7/wKoJWI/CEifwB3AfVFpD6wCdiLveXPKLO60ruAkum+PjbdtY4CPse6eY5R1fJYQpYw\nwx2KtZJPBs4OPVeqtOQOoKofq2rqOxIFngnzGhll/BnXAp1CN4PUj+Kquh74HUvaAIhISaxrJjNr\nyfw1zeqaqzJcs4yqdg49ftB1gZPC+LlcAeXJ3YXrEqzlWQfr920AnI51g/RW1RRgMPBiaFAvLjRw\nehSwEet2OCXd880HWorISSJSDrg/3WPFsO6SjUCSiHTC+s3Doqo/YDebt4HxqroNQESqA0ep6pLQ\n17VEpG0oxr3AHrLuHjlSA4EnQzcYRKSKiFwceuwz4KLQQGkx4DGy/r/4EdBORK4QkXgRqSQiDUKP\n/cnBr+lsYEdokLhE6HdQV0RSB04/Be4XkQoiUhUbF3AxypO7C1cf4F1V/VVV/0j9AAYAPUN9yf8C\nfgTmAFuwVnCR0OySJ4Hpoe6CZqr6DfAJsBCYB4xKvVCoP/x2LBltxbpWRh5hvB8D7UKfU11IulY7\ndgN5GrsR/AEczcE3mdx4GYt5gojswGYYnQ2gqj8Bt4Zi+x37GTOdd6+qv2LvNv6Jvabzgfqhh9/B\nxgu2icgIVU3GBqEbAKv4+wZXLnT+f7GumFXYGMYHEfpZXRQS34nJFRYiMgYYoKpjsj3ZuQLOW+6u\nMJkMfBt0EM7lB2+5O+dcDPKWu3POxaDAamBUrlxZq1WrFtTlnXOuQJo3b94mVa2S3XmBJfdq1aox\nd+7coC7vnHMFkoiEtfjMu2Wccy4GeXJ3zrkY5MndOedikG8q4JyLqAMHDrBu3Tr27t0bdCgFWvHi\nxalatSpFixbN0fd7cnfORdS6desoU6YM1apVI1RW3x0hVWXz5s2sW7eO6tWr5+g5vFvGORdRe/fu\npVKlSp7Yc0FEqFSpUq7e/Xhyd85FnCf23Mvta+jJvTDbuxdWrID9+4OOxDkXYZ7cC6MDB2DQIDj1\nVDjtNChRwj5/9VXQkTkXMSNGjEBE+Pnnnw973pAhQ/jtt98Oe87hTJ48mYsuuijH359XPLkXNlu3\nQtOmcNNNUK2aJfmHHoIyZeCSS+DhhyElUvtVOBecoUOHct555zF06NDDnpfb5B6tPLkXJgcOwOWX\nw+LF8NlnMG0a3HADPPoozJwJffvC44/DjTcGHalzubJz506mTZvGO++8w7Bhw9KOP/PMM9SrV4/6\n9etz33338dlnnzF37lx69uxJgwYN2LNnD9WqVWPTJtsmeO7cubRu3RqA2bNn07x5cxo2bMg555zD\nL7/8EsSPFjafCllYqMLNN0NCArz3Hlx22cGPFy8O77wDVarAs89Cp05w6aXBxOpix513wvz5kX3O\nBg3gpZcOe8pXX31Fx44dqVmzJpUqVWLevHls2LCBr776ilmzZlGyZEm2bNlCxYoVGTBgAM8//zxN\nmjQ57HPWrl2b7777jvj4eCZOnMh//vMfPv/888N+T5A8uRcWw4ZZ8n7gAejdO/NzROCJJ2DSJGvR\nn3MOHHts5uc6F8WGDh3KHXfcAUD37t0ZOnQoqkrfvn0pWdL2Za9YseIRPef27dvp06cPy5YtQ0Q4\ncOBAxOOOJE/uhcHevXDffdCwITz22OHPLVoUPvgAGjWC666Dr7+2pO9cTmTTws4LW7ZsISEhgR9/\n/BERITk5GRGhW7duYX1/fHw8KaFxp/TzzB966CHatGnDl19+yerVq9O6a6KV97kXBi+/DL/+Cs8/\nD0XC+JWffrq14EePhilT8j4+5yLos88+o1evXqxZs4bVq1ezdu1aqlevTrly5Xj33XfZvXs3YDcB\ngDJlyrBjx460769WrRrz5s0DOKjbZfv27ZxwwgmADcJGO0/usW7jRnjqKbjoImjbNvzvu+UW65LJ\nrqXvXJQZOnQoXbt2PejYZZddxu+//06XLl1o0qQJDRo04Pnnnwfgmmuu4aabbkobUH3kkUe44447\naNKkCXFxcWnPce+993L//ffTsGFDkpKS8vVnyonA9lBt0qSJ+mYd+eCuu+DVV+HHH61FfiRefBH+\n+U+bVXPuuXkTn4s5S5Ys4fQj/VtzmcrstRSReap6+NFfvOUe23bssEHU7t2PPLGDTYmsUsWmRzrn\nChRP7rHsww8twffvn7PvL1XKWu7jx4O/y3KuQPHkHqtUYcAAaNwYzj47589zyy2W5AcNilxszrk8\n58k9Vk2ZYitRb701d1MZy5SBK66wefK7dkUuPudcnvLkHqsGDICKFa2/PbeuvRZ27rSSBc65AsGT\neyzauBFGjLCkXKJE7p/v3HOhRg0YPDj3z+Wcyxee3GPR559DcjL06hWZ5xOxG8XUqbBsWWSe07k8\nFBcXR4MGDahbty7dunVLW7iUE+lL+o4cOZKnn346y3O3bdvG66+/fsTXePTRR9Pm3UeKJ/dYNGwY\n1K4N9epF7jl797bVre++G7nndC6PlChRgvnz57No0SKKFSvGwIEDD3pcVdNKDByJLl26cN9992X5\neE6Te17w5B5rfvvNWtjdu0e2Jszxx8MFF8Ann9hMHOcKiBYtWrB8+XJWr15NrVq16N27N3Xr1mXt\n2rVMmDCB5s2b06hRI7p168bOnTsBGDduHLVr16ZRo0Z88cUXac81ZMgQ+oemFv/555907dqV+vXr\nU79+fWbMmMF9993HihUraNCgAffccw8Azz33HE2bNuXMM8/kkUceSXuuJ598kpo1a3LeeeflSfng\nbAuHichg4CJgg6rWzeTxnsC/AQF2ADer6oJIB+rCNHy4Jd8rr4z8c192GVx/PSxcCPXrR/75XcwJ\nqOJvmqSkJMaOHUvHjh0BWLZsGe+99x7NmjVj06ZNPPHEE0ycOJFSpUrxzDPP8OKLL3Lvvfdy/fXX\nk5CQwGmnncaVWfxfuv3222nVqhVffvklycnJ7Ny5k6effppFixYxP/RDT5gwgWXLljF79mxUlS5d\nujB16lRKlSrFsGHDmD9/PklJSTRq1IjGjRtH5PVJFU5VyCHAAOD9LB5fBbRS1a0i0gl4E8jFxGqX\nK8OG2V9/7dqRf+4uXWzV6uefe3J3UW3Pnj00aNAAsJZ7v379+O233zj55JNp1qwZAImJiSxevJhz\nQ6U19u/fT/Pmzfn555+pXr06NWrUAODqq6/mzTffPOQaCQkJvP++pcW4uDjKlSvH1q1bDzpnwoQJ\nTJgwgYYNGwK2iciyZcvYsWMHXbt2TSs/3KVLl4i/Btkmd1WdKiLVDvP4jHRfJgJVcx+Wy5FVqyAx\nEQ4z4JMrRx8NLVrAF194QTEXlgAq/gJ/97lnVKpUqbR/qyrt27c/ZBu+zL4vp1SV+++/nxsz7G72\nUj68MJHuc+8HjM3qQRG5QUTmisjcjRs3RvjSjhEj7HOYdatz5LLL4KefIMq3GHMuO82aNWP69Oks\nX74cgF27drF06VJq167N6tWrWbFiBUCWe7Cef/75vPHGGwAkJyezffv2Q8oHd+jQgcGDB6f15a9f\nv54NGzbQsmVLRowYwZ49e9ixYwdff/11xH++iCV3EWmDJfd/Z3WOqr6pqk1UtUmVKlUidWmXatQo\nOOMMOOWUvLvGJZfY5y+/zLtrOJcPqlSpwpAhQ+jRowdnnnlmWpdM8eLFefPNN7nwwgtp1KgRRx99\ndKbf//LLL/Ptt99Sr149GjduzOLFi6lUqRLnnnsudevW5Z577uGCCy7gqquuonnz5tSrV4/LL7+c\nHTt20KhRI6688krq169Pp06daNq0acR/vrBK/oa6ZUZlNqAaevxM4Eugk6ouDefCXvI3wv76CypV\nskJfedUtk+rssyElBebMydvruALJS/5GTqAlf0XkJOALoFe4id3lgQkTICkJLrww76/VtatViVy/\nPu+v5ZzLkWyTu4gMBWYCtURknYj0E5GbROSm0CkPA5WA10Vkvoh4czwIo0ZBhQrQvHlYp//8M7z2\nGtx0E/ToYRNg9u0L81qpN5Dx43MWq3Muz4UzW6ZHNo9fB1wXsYjckUtJgTFjoGNHiD/8rzQlBV54\nAf7zH2voV6hge2IPG2Z1xl55BXr2zOZ6devaoqZx46wsgXMZqCriG6vnSm53yfMVqrFgzhwrFhaq\nf5GVv/6CTp3g3nvh4ott5uTmzbaoddw4qFMHrr46jOlrInYj+eYbu0M4l07x4sXZvHlzrpNTYaaq\nbN68meLFi+f4OcJZxOSi3ejRVvcltAovMykpVh4mIQEGDoQbbvi7OkFcHHToAK1aWav9rrvsRvDw\nw4e5ZocOViVy9mw455zI/jyuQKtatSrr1q3DpzvnTvHixalaNefLhjy5x4Jx46BZM+tXycKTT8JX\nX8HLL9si08wULw6ffgp9+8Ijj1j3ffv2WTxhu3Z2Qxk3zpO7O0jRokWpXr160GEUet4tU9Bt3Woz\nV7LMwjB2rCXrq6+G2247/NPFxdmOerVrW5LPsJr6bxUr2pTIceNyHrtzLs94ci/ovv3WCoW1a5fp\nw3v2WEu9bl1L2uGMcZUoAR98AH/+abv0ZaljR7uxbNqUs9idc3nGk3tBN2kSlC6d5SbYL74Ia9fC\nq69CqEZRWJo0sT73oUMP0zjv2NFuLBMmHHnczrk85cm9oJs4EVq2tPmMGfz+O/zvf7bmqFWrI3/q\nf/8bqleHBx/MooR748ZQvryN0jrnooon94Js7VpYujTLLpmHHoL9++HZZ3P29MWKWV/9vHl/1yQ7\nSFyc3TW+/TZnF3DO5RlP7gXZpEn2OZPkvny5zVTs3x9OOy3nl+jZE2rVshtFcnImJ7RpAytXwq+/\n5vwizrmI8+RekE2caDXW6x5az+2ll6yn5t57c3eJ+Hj473+tyu8nn2RyQps29tlb785FFU/uBZWq\ntdzPP/+QKTBbttg+1lddBccem/tLdetmlYSfey6Tvve6da0apSd356KKJ/eC6pdf4I8/oG3bQx4a\nNAh274a7747MpYoUsfnx8+fDzJmZPNi69d9TMp1zUcGTe0E1dap9zjANZv9+m/Z4wQVQr17kLtez\nJ5Qta5UkD9GmjfW5r1wZuQs653LFk3tBNWUKHHfcIaOln35qUyAj1WpPVbo0XHMNDB9ui5sO4v3u\nzkUdT+4Fkaol95YtD+lvf+cdy/cXXBD5y95yCxw4AG+/neGB00+HY47x5O5cFPHkXhCtXm27ILVs\nedDhVatg8mRrYedFKe1atWzW5cCBGaZFilj30NSp3u/uXJTw5F4Qpfa3Z0ju771nebZ377y79I03\nwrp1mSxKbdHCHlizJu8u7pwLmyf3gmjKFKvKWKdO2qGUFEvu7drBiSfm3aUvugjKlYOPPsrwQIsW\n9nnatLy7uHMubJ7cC6KpU63VXqTIQYdWr7YumbxUvDhcfrntubp7d7oH6ta16TTffZe3ATjnwuLJ\nvaBZvx5WrDikS2bIEMutl1yS9yH07Ak7d8LXX6c7GBcH557rLXfnooQn94ImtWWc2g0C7N1rLelu\n3Y6srG9OtWoFVavChx9meKBFC1i82DZmdc4FypN7QTNjBpQqBQ0apB0aP95a0ldckT8hFCkCPXpY\nnfeD9unwfnfnoka2yV1EBovIBhFZlMXjIiKviMhyEVkoIo0iH6ZLk5gITZtaRa+Q4cNtfDV1LVF+\nuPpqSEqya6dp0sTqBHtydy5w4bTchwAdD/N4J6BG6OMG4I3ch+UytWcP/PCDbYYdsm8fjBxpfe2Z\n7NeRZ+rVg5o14Ysv0h0sXhzOOssHVZ2LAtkmd1WdCmw5zCkXA++rSQTKi8hxkQrQpfP999ZcTpfc\nJ0yAHTusvz0/icCll9qi1C3p/zpatLDdPXbtyt+AnHMHiUSf+wnA2nRfrwsdO4SI3CAic0Vk7saN\nGyNw6UImMdE+p0vuw4fbTneZFIfMc1272krVUaPSHTz3XLsBzZ2b/wE559Lk64Cqqr6pqk1UtUmV\nKlXy89KxITHRNjU95hjg4C6ZYsXyP5wmTWzWzEFdM6k3nkNqAzvn8lMkkvt6IP2ayKqhYy7SZs48\nqNWekADbt8NllwUTTpEidmMZPz5dL0ylSlCjxt/vMpxzgYhEch8J9A7NmmkGbFfV3yPwvC69dets\nAVPz5mmHRo2yee1Z7I+dLy691ObZjxuX7mDz5nYj8iJizgUmnKmQQ4GZQC0RWSci/UTkJhG5KXTK\nGGAlsBx4C7glz6ItzFK7OUItd1VbIdq+vU1SCUqLFtZYP6hrpnlz2LDBylQ65wIRn90Jqtojm8cV\nuDViEbnMJSZaFq9fH4CFC2HtWnjkkWDDio+Hf/wDRoywcdT4eP5+dzFzJpxySqDxOVdY+QrVgiIx\nERo3Ths5Ta3rcuGFAcbE3zFs25ZuDLVuXdu6yQdVnQuMJ/eCYP9+mzuebjB11ChbqHrssQHGFdK+\nvbXYR48OHYiLs8VMntydC4wn94Jg/nyb9xjq7vjzT5g927pDokG5ctb3PmZMuoPNm8OCBb6YybmA\neHIvCDIMpo4ebQOq0ZLcATp3hh9/hF9/DR1o1sxWOM2bF2hczhVWntwLgsREWy10gi38HT3avgyN\nrUaF1L7/tNa7L2ZyLlCe3AuCxMS0LpkDB2DiROjYMW82wc6p2rVt8Wxacq9c2RYzeXJ3LhCe3KPd\nH3/Y/nmhlvCsWfDXX5bco4mItd4nTbJFTYAvZnIuQJ7co13qMv5Qy33cOJuMcv75AcaUhc6dbV/V\nqVNDB3wxk3OB8eQe7RITrVB7w4aA1XFp1swqQUabVq1sGv4334QOpF/M5JzLV57co93MmZbYixdn\n40abfNKhQ9BBZa5kSav4O3Fi6EDdurYloCd35/KdJ/dolpQEc+aktYC/+ca6r6Otvz29du1sWv6G\nDfy9mMkrRDqX7zy5R7OFC21rvdBg6rhxVqSrURTvUtu+vX2eNCl0IHUx0+7dgcXkXGHkyT2apdt5\nKSXFttS74AJrEEerRo2gQoV0XTPNm/vOTM4FwJN7NEtMtOIxJ5/MTz9Z2YHUlnG0iouzLf9Su5B8\nMZNzwfDkHs1Sd14SISHBDgWxV+qRat/eyhEvXYovZnIuIJ7co9WmTbB8eVrLNyEBTj0VTj454LjC\nkPru4qApkYmJvpjJuXzkyT1azZpln5s3JykJJk+OzoVLmTnlFPtI63dv1sz6lNasCTQu5woTT+7R\nauZM68Bu3Jjvv7eSAwWhSyZVu3bw7bc2lsrZZ9vB1BuWcy7PeXKPVomJVvaxVKm0/vbWrQON6Ii0\nb283pNmzgXr1oEQJn+/uXD7y5B6NkpOtlZuuv71uXTjmmIDjOgJt21oxsW++wconNGniyd25fOTJ\nPRotXgw7d0KzZuzbB9OmFawuGYCKFW3L14P63b//3naUcs7lOU/u0ShdJcjERFukWlAGU9Nr395+\nlB07sOS+f7/VJnDO5bmwkruIdBSRX0RkuYjcl8njJ4nItyLyg4gsFJHOkQ+1EJk50+oMnHoqCQlQ\npAi0bBl0UEeufXvSZvr4oKpz+Svb5C4iccBrQCegDtBDROpkOO1B4FNVbQh0B16PdKCFSmLiQYuX\nGjeOzhK/2TnnHBtHnTgR2yKwalXvd3cun4TTcj8LWK6qK1V1PzAMuDjDOQqUDf27HPBb5EIsZLZt\ngyVLoHlzdu2yXFjQ+ttTHXWUveNIW8zUrJknd+fySTjJ/QRgbbqv14WOpfcocLWIrAPGALdl9kQi\ncoOIzBWRuRs3bsxBuIVAardFs2ZMm2bdGgU1uYN1zSxZAr/9hiX3VatC9YCdc3kpUgOqPYAhqloV\n6Ax8ICKHPLeqvqmqTVS1SZUqVSJ06RiTmGhzCM86i0mTbBbhuecGHVTOpd6Yvv0W73cvQJKS4PPP\n4ZZb4IwzoGZNu1HfeSesWBF0dC4c4ST39cCJ6b6uGjqWXj/gUwBVnQkUBypHIsBCZ+ZMm9RepgwJ\nCVaWpVSpoIPKufr1rQRwQgJWDzg+3rtmotycOdC0KVx+OXzwgdUzatDAFqUNHAi1akGfPqF3Yy5q\nhZPc5wA1RKS6iBTDBkxHZjjnV+B8ABE5HUvu3u9ypFJS0hYvbd1q08ILcpcM2EyfNm1Cyb1kScv2\nntyjkio8+qi9wdqwAT75BLZsgTFj4NNP7U9z1Sq44w4YPtxuAD/8EHTULivZJndVTQL6A+OBJdis\nmJ9E5DER6RI67Z/A9SKyABgKXKPqJQCP2NKlNqDavDlTpth/toKe3MF+htWrLTHQrJnVJEhODjos\nl44q/Otf8N//Qq9eNk5yxRXWLZjeccfBCy/Y/TkuDlq0gNGjg4nZHV5Yfe6qOkZVa6rqqar6ZOjY\nw6o6MvTvxap6rqrWV9UGqjohL4OOWak1z5s1IyHBphGmdlMXZKk3qIQELLnv3GnZw0UFVetLf/FF\n6N8fhgyBsmUP/z1nnmkt+dq14dJLYcaMfAnVHQFfoRpNEhNtQnutWkyaZK2iYsWCDir3ate2DaUS\nEvj7buVdM1Fj0CB45RVL8K+8YuP54TjuOBg/Hk46CS65xCs6RxtP7tFk5kw4+2z+2FCExYsLZsmB\nzIhY6z0hAfTU06zwjCf3qDB3rvWhd+pk3S3hJvZUlSrB119bZYl//MPelLno4Mk9WuzYAYsWQbNm\nNm2Q2OhvT9W2LfzxB/z8i/hipiixdSt062bVRj/4wAa/c6J2bRtwXbQI7r8/sjG6nPPkHi3mzLHO\nz1B/e7ly0LBh0EFFziH97osX29w6F5i774Z16ywxV6qUu+e64AK47TYYMACmTIlMfC53PLlHi9TB\n1LPPJiHBNuaIiws0ooiqXh2qVUvX765qNzQXiClTbOD0nnvStg3Itaeesu0V+/WD3bsj85wu5zy5\nR4vERKhdm9XbK7ByZWx1yaRq29ZWqqY0OcsOeNdMIPbvh5tvthvugw9G7nlLlYJ33rEVrA8/HLnn\ndTnjyT0aqFqia948bUu9WE3uW7fCgjXl4fTTPbkH5PnnbSbqgAG2riySWreGa6+1WTdepiBYntyj\nwYoVsGlTWn/70UdbPY9Y06aNfU7rd581y25sLt/8+Sc8+aTNTe+cR7suPP64LX7ywdVgeXKPBqEW\nrJ5tyT11/9FYc/zxNrMiLblv3BhaturyyxNP2E6HTz+dd9c4/ni4914rUeCLm4LjyT0azJwJpUvz\nS/wZ/P57bHbJpGrbFqZOhQONfDFTflu1yhYs9esHNWrk7bX+9S9b5PTPf/qbs6B4co8GiYlW4ney\nTY+J9eS+cyfM3XOGjcB5cs83jzxiM7DCHuxcscKKzVx3nfXjXH+9zZvcvDnbby1VCh57zH6948bl\nLm6XM57cg7Z7NyxYkNbfftJJNp0sVrVubZ8TpsZbWUGv7Z4vFi+GDz+0uegnZNxqJ6MFC2zJ6mmn\nWYYeMwZ++cX6Wa680vpdHnrIdm4/jN697e/5sce89R4ET+5BmzMHkpNJObs5335rJQdisb89VaVK\nVhs8rd/9hx9g796gw4p5Tz9thejuvfcwJ6nCG2/YOoTvv7f6v7/+aoXbf/rJBv1nzrRykU88YaP+\nqeszMlGsGNx3n7XeJ02K+I/ksuHJPWihEacFZc5j69bY7pJJ1bYtTJ8Oexs2hwMHvCh4HluzBj7+\nGG64ASpntYVOcjL07WtbL7VsAirtAAAgAElEQVRpY7UEHnnk4GZ+fLzdkD/4wBYsFClirZHx47O8\ndt++1tB//PHI/kwue57cgzZjBtSuTcL35YG/pwvGsrZtbcbGzCKh/QO93z1PPf+85eG7787iBFW4\n6SZ47z1L6KNHQ3bbYLZubX+7tWpZxbDPP8/0tOLF7d3C1Kn24fKPJ/cgpaTYf5BzzmHSJPt/km1/\naAxo0cIG9hIWVLI93Dy555kNG+Dtt+Hqq+HEEzM5QdVqELz9NjzwgHXFhFtB7OijrQXftClcdVWW\nv8frr7d3DM8/n+Mfw+WAJ/cgLV0KW7Zw4KxzmTq1cHTJgG0E0bRpun53T+555tVX7V3Sv/+dxQnv\nvWe1fvv3z1nfSfnyVvO3alWbUZPJxqolS1pvz9df25+8yx+e3IMU6m+fU/Z8du2Knfrt4Wjb1nbb\n29GolQ3arV0bdEgxZ88eGx/t0sXeFR5iyRK49VbrC3zppZyP5FesCCNGWJXPyy6z4jUZ3HKLDbC+\n/HLOLuGOnCf3IE2fDhUrkrDc3i+nThMsDNq2haQkmFaivR2YPj3YgGLQ0KE2Jf2OOzJ5cM8e6N7d\nJqR/+GHuS5DWq2dlJhMTbSZNBsccAz172ilbtuTuUi48ntyDFOpvT/i2CA0a5L6mdkFyzjnWkktY\nfYolGE/uEaVqxbvq1cui0fDQQ7BwIbz/vk1niYTLL7fO/f/9D+bPP+Thu+6yZR1vvhmZy7nD8+Qe\nlM2b4eef2dO0JTNmFJ7+9lQlSkDz5pAwuYj9Y9q0oEOKKVOn2lqk22/PpLdl/nzrhrnhBujYMbIX\nfvlla6X07WvTXNOpVw/atbNqlElJkb2sO5Qn96CEFn/MKH0B+/YVvuQO9jP/8ANsadTOWpG+M1PE\nvPKKdYX37JnhgZQUm/ZYsWLeVA+rWNE6+ufPz3R6TP/+sH69Da66vBVWcheRjiLyi4gsF5H7sjjn\nChFZLCI/icjHkQ0zBs2YAfHxJPxRh7g4mx5Y2LRta90HU0p0tKTjs2YiYu1aG9+8/np7h3SQN9+0\nkg8vvggVKuRNAF27wiWXWG3h338/6KELL7SJNW+8kTeXdn/LNrmLSBzwGtAJqAP0EJE6Gc6pAdwP\nnKuqZwB35kGssWXGDGjYkITvinLWWTY9sLA56yybJpfw++k2t9q7ZiLi7bf/Xpd0kG3bbC57mzaZ\nNOkj7LnnbNZMhq2e4uPhxhvhm298WmReC6flfhawXFVXqup+YBhwcYZzrgdeU9WtAKq6IbJhxpgD\nB2D2bP5q3IY5cwpnlwzYgGqLFpAwrZgVnPFB1Vw7cADeesvqflWrluHBp5+2rbBefDHvCxiddpp1\n+L/7rtWpSee66yzJDxyYtyEUduEk9xOA9JOQ14WOpVcTqCki00UkUUQyHaURkRtEZK6IzN24cWPO\nIo4F8+fDnj1MLfcPkpMLb3IH+9kXL4Y/GnS0bpkMg3DuyIwaZT0hh7Ta162zwc6ePe1Gmh8efNAG\nVzMUdT/2WFvv9O67vpF2XorUgGo8UANoDfQA3hKR8hlPUtU3VbWJqjapkl3tilgWWryUsLk+Rx1l\nk0UKq9Qb27elLvq7/LHLsYEDrU+7U6cMDzzyiI1r5GcFr/LlrXj85MmHlIW8+WbrJfrss/wLp7AJ\nJ7mvB9JXpagaOpbeOmCkqh5Q1VXAUizZu8xMnw4nnUTCnDKcc04mg16FSMOGUK4cJGyqZwe83z3H\nVqyACRNsIDU+Pt0DS5bY6qFbb82kryaPXX+93W0efvig1nurVtZz8847+RtOYRJOcp8D1BCR6iJS\nDOgOjMxwzgis1Y6IVMa6aVZGMM7YoQrTp7OxcUcWLCjcXTJgCyNbt4aEWaWtiJj3u+fYO+/YuHS/\nfhkeePJJK88YxI7VxYtb98zMmQeVBhaBa6+1+fjLluV/WIVBtsldVZOA/sB4YAnwqar+JCKPiUiX\n0Gnjgc0ishj4FrhHVbPfi6swCm1+MLHspQBccEHA8USBtm1h5UpY3eASa7n7tj1HLCnJaoB17pyh\nsuiyZVaH4JZbsi/jm1f69rUbd4bWe58+djMaPDiYsGJdWH3uqjpGVWuq6qmq+mTo2MOqOjL0b1XV\nu1W1jqrWU9VheRl0gRbqb5+wpQkVKkDjxgHHEwXS+t3LdoE//rBM747IhAlWkPHaazM88NRTNi3p\nn/8MJC7Arv/QQ7br2NixaYePP95uRkOG+IrVvOArVPPbjBloyVJ8831Fzj8/9/WaYsEZZ1hp8Imb\nG9kB75o5YoMHW8P8wgvTHVy1ynZNuvFGm6ISpF69rO/9mWcOOnzddXY/HzMmoLhimCf3/DZ9Okvq\nXcH69eJdMiEi0L49TJhdjpSy5X1Q9Qht2gQjR1rNrmLF0j3w7LPWerjnnsBiS5P67mHq1IP2Xe3c\n2SpG+sBq5Hlyz0/bt8OCBUwo1w2whOZMhw6waZPwQ91e3nI/Qh99ZMsDDuqS2bDB+jv69Ime7b2u\nu85qz6RrvRctaiGOHn1IpQKXS57c89P06ZCSwjfbm1KjRv7PSotmqe9ixpfsaquavOh3WFSt1du0\nKdStm+6B116DvXsPs3FqAEqXhttug6++st9xyLXX2v7c778fYGwxyJN7fpoyhX3xpZj8YyXvksng\nmGNszvv4jQ3tQGjg2R3e99/Djz9maLXv3m3JvUsXqF07sNgy1b+/FRRKVzGyVi047zwbN/CJUpHj\nyT0/TZ3KjFp92b3b+9sz06EDzPipHH/FVYDvvgs6nAJh8GCbSt69e7qDQ4bYfgHR0NeeUeXK0Ls3\nfPwxpCtB0q+fFRLz4ZbI8eSeX3btgrlz+abspWkLd9zBOnSApCQh4bQbbODNHdbevZYjL73UVvoD\n1r/x4otw9tlw7rmBxpel22+3XbsHDUo71K0blCljFS1dZHhyzy8zZ0JSEhM2NaJ588JZ4jc755xj\n3bLjS3a1OdE7dgQdUlQbMcLqsxzUJTN2rNUhuOuuvK/8mFOnn26DLK+/nraZdqlS0KMHDB9u8w5c\n7nlyzy9TprBJqvD98rLeJZOFYsWs1Pj43+uhyck+ayYbgwfbws82bdIdfPVVmx1z6aWBxRWWO+6w\n6THpKodde63t2/3ppwHGFUM8ueeXqVOZVP06VMWnQB5Gx46w6o+SLI8/3aoJukytWQMTJ9rK/iKp\n/4t//tmWqt58s80xjGYdO0LNmrYfYMhZZ1mj/t13A4wrhnhyzw9798KsWUwoeTHly0OTJkEHFL06\ndLDP40+6zpP7Ybz3nn2+5pp0BwcMgKOOso2vo12RIjYtctYs+8B6kfr2tR7Mn38OOL4Y4Mk9P8ya\nhe7bxzd/1OP88zOUY3UHOfVU+xhfpDPMnev97plISbHW7fnnW7cMYB3VQ4bYtJmCsldCnz42+PTy\ny2mHevWyRbVDhgQXVqzw5J4fJk3iFzmdtZtKepdMGDp0gIR1NdiXHOdz4zIxeTKsXm2t3DRDhtiM\nrNtuCyaonChTxuZADh8O622LiGOPtY1G3n/fi4nllif3/JCQwIQTbUqDD6Zmr0MH2L03julxrbxr\nJhPvvmsbnHTtGjqQkmJdMuecU/DKjPbvb9M333gj7VDfvjbWOmFCgHHFAE/ueW3nTpg1i2+KXshp\np0H16kEHFP3atLGuq/HHXQPffht0OFFl+3abYHLVVel28Bo3DpYvt/njBc0pp9hK2kGDbGwKuOgi\nW+vkA6u548k9r333HXuT4khYVzNtsNAdXpkythx9/IE2MG+eTeZ2AAwbZjnwoLntr7xixdGjffpj\nVu64w0pbDh0K2JTYnj2t0uVm3/Inxzy557WEBCbHt2f3vriDa227w+rQARb8eRy/pxztrfd0Bg+G\nevXS9b788ottX1cQpj9mpXVrK+o/YEBacZm+fW1908cfBxtaQebJPa9NmsToY/pSooSXHDgSaVMi\nj7oYvvkm2GCixKJFMHu2tdrTFp8OGGBN3YIw/TErIrZ59/ffp02LrF/fCsl510zOeXLPS5s3oz/M\nZ/TuNpx/fro+UpetBg2sp2FUhV6e3EPefdfGInr2DB3YscMmvF9xhW1lVZD16mXTIgcMSDvUty/8\n8AMsWBBgXAWYJ/e8NGUKP1OLVVsreJfMERKxgbXxW5uyb/mvNvevEDtwwHbM69Il3TT2Dz6wBF+Q\npj9mpXRpW5E1fDj8+Sdgg8bFinnrPac8ueeliRMZU8zmq3XuHHAsBVCXLrBzXzEm07rQt95Hj7YK\nuWkDqarWym3SxNbtx4JbbrGO9lBpyEqV7G/go4/S6ou5I+DJPS+NH8/oMt2pVw9OOinoYAqetm2h\nRAnl65LdC31yHzwYjjvu77EIJk+GJUtsnnisqFXL9p4cODBtBVPfvjaRZtSogGMrgMJK7iLSUUR+\nEZHlInLfYc67TERURLx6yvLlbF+5ie+2nuFdMjlUogRccIHwtfwDnTjJFusUQr/9BmPG2B4XaaUr\nBgywpu2VVwYaW8TdeiusW2fzILFFf8cd510zOZFtcheROOA1oBNQB+ghInUyOa8McAcwK9JBFkjj\nxjGeDiSlxHHRRUEHU3D94x/w667KLNxa1WZTFELvvmuLOK+7LnRg7Vor5n7ddbYNUyy56CJ7mxsa\nWI2Pt5va2LHwxx8Bx1bAhNNyPwtYrqorVXU/MAy4OJPzHgeeAfZGML6Ca9w4RpTuRZUq0KxZ0MEU\nXKnver7mH7YSs5BJSbEu6LZt4bTTQgcHDbI+95tuCjS2PBEXZ33v334LP/0E2DhrcrKNH7vwhZPc\nTwDWpvt6XehYGhFpBJyoqqMP90QicoOIzBWRuRvT7Z8Yc/btY3/CNEbvb0eXLvb36nLm2GNtx7iv\nSl5lo4qFzMSJNlHo+utDB/btgzfftLc01aoFGFke6tfPShe//jpge3w3a2bvYHwD7fDlekBVRIoA\nLwL/zO5cVX1TVZuoapMqBaUsaU5Mm8bkPWfx1/4SXHJJ0MEUfF27wtzddfg18TcbXStE3nrLutbT\nioR99plNm4mlgdSMKle20sXvvZe2596119r48Szv9A1bOMl9PXBiuq+rho6lKgPUBSaLyGqgGTCy\nUA+qjh/PiCKXUqqUcv75QQdT8F12mX3+gq6Fqmvmzz+ta/2aa6whC1hfdM2axPwfVv/+VsL4/fcB\nGzcuVcretLjwhJPc5wA1RKS6iBQDugMjUx9U1e2qWllVq6lqNSAR6KKqc/Mk4gIgZex4voq/nA4d\nxFelRsBpp8GZZyqfF+1u00YKiSFDbEZg2kDqvHmQmGgzSorE+Czm1Pn7r70GqpQta4uahg3zOnLh\nyvYvRFWTgP7AeGAJ8Kmq/iQij4lIl7wOsMBZs4a5i47it/2VvUsmgi67TJh+4Cx+H/NDodjFIXUg\ntWVL63MGLNGVKmU7GBUG/ftbYbRJkwC48UbbQPvDDwOOq4AI6/avqmNUtaaqnqqqT4aOPayqIzM5\nt3VhbrUzahRf0pW4OPX57RF02WWgFOHL7W0KRcfr5MlWoj1tIHXzZiuJ26uX7dRRGHTrZv3voWmR\njRvbR+pkIXd4Mf7eLv/pVyP5rGgP2rQRKlYMOprYUacO1K6ZzOdcXihmzbz1FlSo8Pd4A4MHWyH3\nW28NNK58Vby43d2+/hrWrAGs9b5okW2i7Q7Pk3sk/fUX87/dyvID1bjiiqCDiS0icFm3OKZIKzZ+\nPjXocPLUpk3wxRfWSC9RApvk/frr0KoV1K0bdHj5K3Uu/8CBAPToYZu5DBoUYEwFhCf3SJowgU+T\nrEsmbeqai5hu3SBZ4/h8aV34+eegw8kz779vhbLSumTGjLHJ7oWp1Z7qpJOsethbb8HevZQubSWP\nP/0Utm4NOrjo5sk9gvSrkXxapDvnt1UqVw46mthz5plQp+YBPqInfPll0OHkiZQUa5U2b56ukZ66\njV5hHaHv39/GHD79FLCumb1702ZJuix4co+UpCS+/3o9K1Oqc8WV/rLmBRHo2aco02jBmqEzgg4n\nT3zzDSxdmq6RvmCBLVPt37/gbqOXW23b2pSh0MBqgwY2S9IHVg/Ps1CkzJjBp9svID4updA2sPJD\njx72ediPdeDXX4MNJg+8+iocc4x1QQHw4os2/fHGGwONK1Cp2/DNmWP7DGIvx5IlMG1awLFFMU/u\nEaLDP+NTuZJ2bVKoVCnoaGJX9erQvOEe65oZMSLocCJqxQrrXr/xRtuBiN9+s+mP115LoZ961bu3\n7db06quArVgtW9YHVg/Hk3skpKQwY+gaVms1ul8dn/35Lld69ivBj5zJj+//EHQoEfX661ZkLq2R\n/uqrNlPmzjsDjSsqlC1rN7lhw2DdOkqVsnw/fLiV2nGH8uQeCTNm8P7mzpQ8KolLLw06mNjXrRvE\nSTIfzasNv/8edDgRsWuXTWW//HIbO2XnTpv+17UrnHJK0OFFh7vusk72l18GrKdm/35vvWfFk3sE\n7P34Cz7lCi69RClTJuhoYt/RR0Pn1rt5j94kDR0edDgRMWSI1UxJ2+t68GA78K9/BRlWdKlWze7s\ngwbB9u3Urm3bDr7+uu+xmhlP7rmVksKoYTvZRgV6XVtIZzMEoN8dZfiD4xjzxpqgQ8m15GQbN23e\nHM45B6ud89JL9oXv9HKwe+6BHTvSmuu3325v3j7/POC4opAn99yaMYMPtl7IceV3x3wV1mjSuTMc\nW2Yn7yxvCcuWBR1OrowYAStXpmukf/klrFoF/8x2i4TCp1EjK3f88suwfz8dO1oF5FBPjUvHk3su\nbXxvDGPozNV94n3HpXxUtCj06ZXCaC7k90GH1K8rMFThuefg1FPh4otDB154Id0Bd4h77rGZRB9/\nTJEi1pU1a5ZVQ3Z/8+SeGwcOMHQoJFGUXv2KBR1NodPvzrIkE89772mBXc0yY4YlprvuCm3HOH16\nhgPuEBdcYMuVn3sOUlLo08cKZb7wQtCBRRdP7rmgY8YyaFdPzqq5lXr1go6m8KlRA1rV/J23N11C\nypx5QYeTI888Y1PYr7kmdODJJ63MbdoBdwgRa70vXgxjx1KmjO2p/fnnVibZGU/uuTD9/2azmDO4\n8V8+RSYoN95ThhWcxvj/Frz35PPnWzXbO++0RajMmWPbCN59d+iAy9KVV8KJJ1rrHRtYLVrUW+/p\neXLPqS1bGPTd6ZQttocrr/KFS0G5rHdpjiuxlZfH17bJ4gXIE0/Y2py06Y9PPmlF3Atj9ccjVbSo\n3RWnTIHZszn2WNugasgQ2LAh6OCigyf3HNr89pcMT7mMXl13eiMrQMWKwa1Xb2d8cjuWvDQ+6HDC\ntmiRdSPccQeULw8sXAhffWUHypYNOryC4frr7Wb4xBOATS7aty+tQkGh58k9h95/bQf7KM4N/6kS\ndCiF3g1PnMxRso9XXgk6kvA9+aSVSkmrLPDYY7YLxe23BxpXgVKmjHVhff01zJtHrVq2oHfAANi+\nPejggufJPQdS5i9k4K+daHbyb5x5ZtDRuCpHCz2bLuP9DR3YOv2noMPJ1qJF8Mkn1vtSsSIwb541\n4++6y1qiLny33Wav2X//C8CDD9rC3oJ0o88rntxzYPT901hKLe58yN8+R4s7nqvKbkrx+j9XBh1K\ntu6/36bu3Xtv6MADD1iW90VLR65cuYNa7w0b2sZN//d/3nr35H6k/vqLFyfU5aRSm7isT+mgo3Eh\nZ7Ysz0VVf+DFWeew49fo3X9t2jQYNQr+/e9Qq33KFBg/3jK+97XnTGrr/ZFHAHj4YduCr7D3vYeV\n3EWko4j8IiLLReS+TB6/W0QWi8hCEZkkIidHPtTo8P2TY5mc0pLbr9tDvE+SiSoP/a8UW6jEGzfN\nDzqUTKlaUj/++FDXuir85z9wwgk+QyY3ypWzee+jR8O0aTRuDBddZPV6/vor6OACpKqH/QDigBXA\nKUAxYAFQJ8M5bYCSoX/fDHyS3fM2btxYC5yUFO1ZdqSWLrJTt20LOhiXmY6VZmuVIht155Z9QYdy\niC+/VAXVQYNCB4YPz3DA5diuXarHHad6zjmqKSk6d669tA89FHRgkQfM1Wzyq6qG1XI/C1iuqitV\ndT8wDDio6IWqfququ0NfJgJVc3vTiUZrP53JJ3915LrzV1OuXNDRuMw8/EAyG1MqM/DmBUGHcpA9\ne2y89IwzoG9fbIfne+6BevVsEwqXOyVLwqOPWj2Hr7+mcWNb5/TCCzFT8v+IhZPcTwDWpvt6XehY\nVvoBY3MTVLR6+t7NCMqdr54adCguC83vPJv2pWbwv89OY9vW6Kk388wzsHq1TdMrWhTrM1i92kr7\nev9eZFx7rZWIvP9+SEriiSeszvtjjwUdWDAiOqAqIlcDTYDnsnj8BhGZKyJzNxawvbHWjl/M279e\nwLVNF3FyreJBh+OyIsKz921hS3I5Hu8THaWAV66Ep5+G7t2hdWusKfnUU3DJJdC2bdDhxY74eHtd\nFy+Gt97itNPgppvgrbdg6dKggwtAdv02QHNgfLqv7wfuz+S8dsAS4Ohw+oMKWp/7LTXGa1H26eoF\n3tke9ZKStF+54VqU/bp0SVKgoaSkqHburFqqlOq6daGD3burFiumunx5oLHFpJQU1datVStWVN28\nWf/8U7V0adUuXYIOLHKIYJ/7HKCGiFQXkWJAd+CgAtoi0hAYBHRR1Zir7LB22hreXtaKa+t/z8ln\nemd71IuL44nni3MUe7mn5/pAQ3nvPRgzBh5/3CbFMHq0bfL84INWs91Flojt3LFtGzz8MEcfDQ89\nBCNH2u+hUAnnDgB0BpZis2YeCB17DEvmABOBP4H5oY+R2T1nQWq533D6FGu1z/oj6FBcuFJS9Knj\nX1VQHfXl/kBC+PVX1bJlVVu2VE1OVtW//lI98UTVOnVU90XfbJ6YcuutqkWKqC5YoPv2qdasqXra\naap79wYdWO4RZss9rOSeFx8FJbkvHLVGi5Ckt9dLCDoUd4T2fjVO67JQjyu7Q7dsyd9rp6Sotm9v\n3TErVoQO3nabqojq9On5G0xhtHmzaqVKqs2aqSYl6fjxlu2efDLowHLPk3sEpKSotj9mgVZgs25e\n7K32AiclRec1v1XjOKC9L9+Vr5f+3//sf9cbb4QOpGaX/v3zNY5C7YMP7DV/9VVVVb30UtUSJQr+\nUIcn9wgY9dJSBdWX2o8KOhSXU8uX60NxTyqojhiRP5f85hvrEbjySmsg6IYNqscea90xu3fnTxDO\nXvwOHWxEdc0aXbvWuslatQp1kxVQ4SZ3ry2ThX374J//KU7NIsu55ePzgg7H5dSpp/LgQ0Ij5tGn\n5wF++SVvL7dmjU15rFMH3nkHBLX511u3wtChUKJE3gbg/iYCAwdCSgrceCNVT1BefNHK+QwcGHRw\nec+Texae6vMzv+w+kZf6/UjRyj5DpiArdt/dfHnqPRTbs52LL0rOs2qBGzdCp05w4AB88UVop7yn\nnrJKYc8+i9eHDkC1araCbNw4eP11rr3W9te+915YtSro4PJYOM37vPiI5m6ZhYm7NJ79enX5kar7\ng5lp4SJszhydEtdG4+WAduqUEvHJKtu2qTZqpFq8uOqUKaGDX3xhPZ9XXx3qn3GBSF1sULy46qJF\numaNdc80a1Yw/3vj3TI5k5wM112yifJs4/8+Oia0VtwVeE2a0PKFi3ldb2bsWOHyy63rLRK2bIEL\nL7Sd8j7/HFq2xHa/7tULzjrLlkiKROZi7siJwODBVlL5qqs46ei9vPUWJCbacoOYFc4dIC8+orXl\n/mT/9QqqQ9u+GXQoLtJSUlS7dNHXi9yqYGNtu3I5iWbpUptDXayYFXlUVdVFi1QrV1atWlX1t99y\nHbaLkDFj7J3UNdeopqTojTfal2PHBh3YkcFnyxy5qd/s1SIkaffiX2jKps1Bh+PywpYtqnXr6ttH\n3aIiKVqnjurChTl7qi++sFXulSurfvdd6ODPP6sec4yVn126NGJhuwh55BFLewMG6O7dqvXqqVao\nULB+VeEmd++WCdm4EXpcsptTWMmgoeWQShWDDsnlhQoVYPx4+h03hvFlurH5zwM0bQrPPQe7d2f/\n7QBr19pGzJdeCieeaG/vzzsPmDnT+mRUYdIkqFEjT38UlwMPP2w7edx5JyVmT+HLL6FIETu0NXo3\n8MqZcO4AefERTS33/ftV29f/U4uxV7/v9WLQ4bj8sGyZ6rHH6h+lT9ULz/pTQfXoo1Wfesp6VTKO\nf+7erTpxouoVV6jGx9vY3DPPpBuQ++AD65s59VTVJUvy/cdxR2DbNtXatVXLl1dduFCnTlUtWlS1\nXbuCMcCKd8uEJyVF9brLtiiovnPSo17zozBZs0a1fn3VIkX0u5s/0gvaJ6s1uy3RN26seu65qnXr\nqsbF2fHy5VXvvlt11arQc2zcaLNhwKoRbtoU5E/kwrV6terxx9vH6tU6ZIj9Crt1Uz1wIOjgDs+T\ne5ie+s8OBdUHSv2f/Wd3hcuOHbYuHVTPPFNXfjJb33lHtXdv1U6dVM8/X/XCC1UffNC2yUsbgN25\nU/W116zDPT7eTvCGQcGycKFquXKqNWqorl2rL7xgfwa9ekX3ClZP7mEY8MJeBdWr4oZqyqzZQYfj\ngpKSovr551axEVSbNLF6JIsXH/w+/a+/bMbF3XfbSCpY0z6nI7IueNOnq5Ypo1q9uuqqVfr44/Zr\n7d07ertoPLln44WnLLFfzAjdO/SLQGNxUWLnTtWXX1Zt2FDT+mfi41WrVLGKU6nHihZV7dpVddo0\nX5wUC2bPtikzVatqysIf9bHH7NfcqZP9SUSbcJO72Ln5r0mTJjp37tx8v25KCjx6/z4ef/Youslw\nPvpAKdrzinyPw0W5xYvh++9hyRLYvBnKlIHy5aFZM2je3DZkdrFjwQLo2BF27YKhQ3nrtwu56SZo\n1MgWpp10UtAB/k1E5qlqk2zPK0zJfccO6HP5Lr6cUIprZTCDPi5LfPfL8zUG51yUWrcOLr4YfvgB\nHnuMr+veT8/ecRQrBn18Z4IAAAklSURBVB99BB06BB2gCTe5F5p57t9/D83q7eSrCcV5qcT9vD3+\nJE/szrm/Va0K330HPXrAQw/xjxdaM3fEOo4/3grC3XWXNewLiphP7vv2wSP37+esJslsW7Od8Sff\nyB0/Xoe0bxd0aM65aFOyJHz4IXzwASxcSM0utUns9gI335DMSy9B3bq2F2tAHR5HJGaTe0oKfPRB\nCrVP3MljTxejp37IohsH0G7xK74xsXMuayJw9dVWCa5dO0o+/C9eSzid7x6ZyFFHKRdeCG3a2Mrk\naBZzyX33bnjzjSTOrLadq3sXofzGZUyodgPvTT2FCgP/5wNhzrnwnHwyjBgBY8dC0aKc99/2LEyu\ny6tXfseSxSk0bw4tWsDw4VbDP9rERHLfvRtGfZVM3ws3cELF3dx4SzxF167kwyp3Me/9xbRfMdB+\nC845d6Q6doQff4TPPqNYmaPo/0lLVuw4hhcafsj6pTu54go49li4/nq7D+zcGXTApsDNltmyBebN\ng2XL4JfJvzFrRgrzfjuWJI2nHNvoIqO4vtmPnPdAK6RjB4iLy4PonXOFkirMnWt7KA4fTvKWbYwr\nciEfl7uJkTvbsvNAceLjUmhcZy8Nz0zmjLrCqSfu5+iye6lcSYk/+QTi4qB0afvIiZidCjlsmA1m\nA5Qquo9GB2ZxXuVfaNVgO236nESxiy6w+cjOOZeXkpOt433sWJg1iz2zf+S7v85kMq35jhb8SD22\nk3ku+ve/4emnc3bZiCZ3EekIvAzEAW+r6tMZHj8KeB9oDGwGrlTV1Yd7zpwm9w0bbF1JjRpwXPxG\npGSJnN8CnXMuUlThjz9sc9b169EdO/n9N2XN9vL8ua88W+KPJql2XZKToUEDWwuXE+Em9/gwnigO\neA1oD6wD5ojISFVdnO60fsBWVT1NRLoDzwBX5iz0wzv6aPswVfLiEs45d+RE4Ljj7AMQ4PjQRxDC\nGVA9C1iuqitVdT8wDLg4wzkXA++F/v0ZcL6IbxrpnHNBybblDpwArE339Trg7KzOUdUkEdkOVAI2\npT9JRG4Abgh9uVNEfslJ0LlUmQxxOX9NMuGvycH89ThUUK/JyeGcFE5yjxhVfRN4Mz+vmZGIzA2n\nv6ow8dfkUP6aHMxfj0NF+2sSTrfMeuDEdF9XDR3L9BwRiQfKYQOrzjnnAhBOcp8D1BCR6iJSDOgO\njMxwzkigT+jflwMJGtQcS+ecc9l3y4T60PsD47GpkINV9ScReQwrGj8SeAf4QESWA1uwG0C0CrRb\nKEr5a3Iof00O5q/HoaL6NQlsEZNzzrm8ExO1ZZxzzh3Mk7tzzsWgmE/uIlJRRL4RkWWhzxWyOC9Z\nROaHPjIOGMcEEekoIr+IyHIRuS+Tx48SkU9Cj88SkWr5H2X+CeP1uEZENqb7u7guiDjzk4gMFpEN\nIrIoi8dFRF4JvWYLRaRRfseYn8J4PVqLyPZ0fyMP53eMWYn55A7cB0xS1RrApNDXmdmjqg1CH13y\nL7z8ka6MRCegDtBDROpkOC2tjATwf1gZiZgU5usB8Em6v4u38zXIYAwBOh7m8U5AjdDHDcAb+RBT\nkIZw+NcD4Lt0fyOP5UNMYSkMyT19aYT3gEsCjCVIXkbiYOG8HoWOqk7FZrxl5WLgfTWJQHkROS5/\nost/YbweUaswJPdjVPX30L//AI7J4rziIjJXRBJFJBZvAJmVkTghq3NUNQlILSMRi8J5PQAuC3U/\nfCYiJ2byeGET7utWmDQXkQUiMlZEzgg6mFT5Wn4gr4jIRODYTB56IP0XqqoiktXcz5NVdb2InAIk\niMiPqroi0rG6AuVrYKiq7hORG7F3NW0DjslFl++x3LFTRDoDI7Auq8DFRHJX1XZZPSYif4rIcar6\ne+jt44YsnmN96PNKEZkMNARiKbkfSRmJdYWgjES2r4eqpv/Z3waezYe4ol04f0eFhqr+le7fY0Tk\ndRGprKqBF1krDN0y6Usj9AG+yniCiFQIbTiCiFQGzgUWZzyvgPMyEgfL9vXI0JfcBViSj/FFq5FA\n79CsmWbA9nTdnoWOiBybOi4lImdhOTUqGkQx0XLPxtPApyLSD1gDXAEgIk2Am1T1OuB0YJCIpGC/\nnKczbEZS4MVgGYlcCfP1uF1EugBJ2OtxTWAB5xMRGQq0BiqLyDrgEaAogKoOBMYAnYHlwG6gbzCR\n5o8wXo/LgZtFJAnYA3SPlgaRlx9wzrkYVBi6ZZxzrtDx5O6cczHIk7tzzsUgT+7OOReDPLk751wM\nKgxTIV0hICKPAjuBssBUVZ0YYCyPBR2Dc57cXUxR1cBLrkZDDM55t4wrsETkARFZKiLTgFqhY0NE\n5PLQvx8WkTkiskhE3ky3krBpqBjYfBF5LrVWd6h++xciMi5U///ZdNfqISI/hp7rmdCxuND1FoUe\nuyuTGJ4WkcWh6z2fry+QK9S85e4KJBFpjK2gbYD9HX8PzMtw2oDU+toi8gFwEVYM7F3gelWdKSJP\nZ/ieBlhdoX3ALyLyKpCM1bZvDGwFJoQqh64FTlDVuqFrlM8QYyWgK1A7VLTuoMedy0vecncFVQvg\nS1XdHSrelNnuWW3EdpT6EavmeEYowZZR1Zmhcz7O8D2TVHW7qu7F6gudDDQFJqvqxlAp5I+AlsBK\n4BQReVVEOgJ/ZXiu7cBe4B0RuRRbru9cvvDk7mKSiBT///buWKWBIAjj+P+zUkiwsfEhJKWlDyCC\nhY21jZ1oZcDnsLnCWtAihWKnsVQQBF/AykYwoI2gjMVuIF4RjihK7r5ftTAsewfH3O4dzACHwEZE\nLAEFMFth6vvI+JMxp9uIeAE6wBWwTaocORr/IDUFOSGdGi6q34HZzzi527S6BtYlzUlqA2ul+DCR\nP0tqkQo8ERED4FXSco5XKY52A6xIWsjt+TaBfq4gOhMRp8AB8K2faF53PiLOgV3Si8DsT/ibu02l\niLiTdAzck2r035biA0kF8EDqwDUa3wKKXAW0T/p8Mm6tJ6UG2peAgLOI6EnqAEeShpukbmlqG+jl\nU4SAvQlu1WwirgppjSOpFRFvebwPLEbEzj9fltmv8s7dmmhVUpf0/D/SgDrt1jzeuZuZ1ZB/qJqZ\n1ZCTu5lZDTm5m5nVkJO7mVkNObmbmdXQF3l1Zqe4YuFZAAAAAElFTkSuQmCC\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "4g3S3K1TFbfr",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 69
        },
        "outputId": "81fc30fd-cc44-4fe0-bb05-a740192479fd"
      },
      "source": [
        "accuracy_DTC  = round(accuracy_score(y_test,Yhat_DTC),3)\n",
        "precision_DTC = round(precision_score(y_test,Yhat_DTC),3)\n",
        "recall_DTC    = round(recall_score(y_test,Yhat_DTC),3)\n",
        "print(\"Accuracy  : {}% \\nPrecision : {}% \\nRecall    : {}% \".format(accuracy_DTC*100,precision_DTC*100,recall_DTC*100))"
      ],
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Accuracy  : 88.6% \n",
            "Precision : 78.3% \n",
            "Recall    : 92.30000000000001% \n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9OYmMWUZHniW",
        "colab_type": "text"
      },
      "source": [
        "### 4. GaussianNB"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BoTGvHsrFbiW",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "from sklearn.naive_bayes import GaussianNB\n",
        "GNB = GaussianNB()\n",
        "GNB.fit(x_train,y_train)\n",
        "Yhat_GNB = GNB.predict(x_test)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ct0U-RdYFbkw",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 313
        },
        "outputId": "965d7a31-b5fd-4ea2-d845-488daae688ec"
      },
      "source": [
        "sns.distplot(y_test,hist=False,color='r',label='Actual')\n",
        "plt.title('Actual v/s Predicted ')\n",
        "sns.distplot(Yhat_GNB,hist=False,color='b',label='Predicted ')"
      ],
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f18e2123cf8>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 62
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAXcAAAEWCAYAAACdaNcBAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAADl0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uIDMuMC4zLCBo\ndHRwOi8vbWF0cGxvdGxpYi5vcmcvnQurowAAIABJREFUeJzs3Xd4VNXWwOHfSkIIvRcpEqRI7x1C\nRwMiiAqKCooowhXFexWE67WXD6xgAS825IqgohSlSg8QQBCkI1UINUAIgRBSZn9/7AEjEhKSSc7M\nZL3Pkwdm5mTOmhHX7Fln77XFGINSSin/EuB0AEoppTxPk7tSSvkhTe5KKeWHNLkrpZQf0uSulFJ+\nSJO7Ukr5IU3uSinlhzS5K58hIu1FJMrpODxJRA6ISGf33/8tIp/mwDn97n1Uf6fJXWWYiCwTkRgR\nyZvB40NFxIhIUHbHlhEiUu56k5qITBKRRBE5JyKnReRnEamRHfEZY94wxjySwZhey44YlP/Q5K4y\nRERCgTDAAD0cDSbzugHzM/F7bxpjCgIVgBPApKsd5C0fYkqBJneVcf2BNdjE9mDqB0Qkn4i8IyJ/\niEisiKwUkXzACvchZ9wj35Yi8pKIfJXqd/8yuheRASKyQ0TiRGSfiDyWkeBEZIKIvH3FfbNE5F+p\n7uoGzHU/9qyIHHafZ5eIdErvHMaYeOBroI77OV4Skeki8pWInAUeEpEAERkpIntF5JSIfCsixVPF\n1M/9Pp0SkeeuiPfK96aNiKwWkTMickhEHhKRQcD9wAj3e/qj+9hyIvK9iESLyH4ReTLV8+Rzj/Zj\nRGQ70DQj76nybZrcVUb1B6a4f24VkTKpHnsbaAy0AooDIwAX0Nb9eFFjTEFjTGQGznMC6A4UBgYA\n74lIowz83lTgHhERABEpBtwCTHPfzuOO52cRuRkYCjQ1xhQCbgUOpHcCESmITawbU93dE5gOFMW+\nN08AdwDtgHJADPCR+/drAROAfu7HSmC/DVztXJWAecAHQCmgAbDJGDPRfZ433e/p7SISAPwI/AaU\nBzoBT4nIre6nexGo4v65lSs+nJV/0uSu0iUibYBKwLfGmA3AXuA+92MBwMPAMGPMYWNMijFmtTHm\nYmbOZYyZY4zZa6zlwEJsOSg9EdiS0aVj7wYijTFH3LfbAr8ZY+KAFCAvUEtE8hhjDhhj9l7juZ8R\nkTPAHqAg8FCqxyKNMTONMS5jzAVgMPCcMSbK/R68BNzt/mZyN/CTMWaF+7HnsR+CV3MfsMgYM9UY\nk2SMOWWM2ZTGsU2BUsaYV4wxicaYfcAnwL3ux/sArxtjThtjDgHvX+O1Kj+hyV1lxIPAQmPMSfft\nr/lz9FcSCMEm/CwTka4issZ98fIMtpRSMr3fM7a96TSgr/uu+7Aj3Esul2SMMXuAp7CJ94SITBOR\nctd4+reNMUWNMWWNMT2u+CA4dMWxlYAZ7lLKGWAH9sOkDHa0fvl4Y8x54FQa56xIxt/TSkC5S+d0\nn/ff7nNy5XmBPzL4vMqHaXJX1+SunfcB2onIMRE5BvwTqC8i9YGTQAL2K/+VrtZP+jyQP9XtsqnO\nlRf4HlvmKWOMKYpNyJLBcKdiR8mVgObu57rkcnIHMMZ8bYy59I3EAGMyeI4rXfkaDwFd3R8Gl35C\njDGHgaPYpA2AiOTHlmau5hBXf0/TOuf+K85ZyBjTzf34X84L3JiB16V8nCZ3lZ47sCPPWti6bwOg\nJrYM0t8Y4wI+B951X9QLdF84zQtEY8sON6V6vk1AWxG5UUSKAKNSPRaMLZdEA8ki0hVbN88QY8xG\n7IfNp8ACY8wZABGpDOQ1xuxw375ZRDq6Y0wALpB2eeR6fQy87v6AQURKiUhP92PTge7uC6XBwCuk\n/f/gFKCziPQRkSARKSEiDdyPHeev7+k6IM59kTif+79BHRG5dOH0W2CUiBQTkQrY6wLKz2lyV+l5\nEPjCGHPQGHPs0g/wIXC/u5b8DLAF+AU4jR0FB7hnl7wOrHKXC1oYY34GvgE2AxuAny6dyF0PfxKb\njGKwpZXZ1xnv10Bn95+X3EaqUTv2A2Q09oPgGFCav37IZMU4bMwLRSQOO8OoOYAxZhvwuDu2o9jX\neNV598aYg9hvG09j39NNQH33w59hrxecEZGZxpgU7EXoBsB+/vyAK+I+/mVsKWY/9hrG/zz0WpUX\nE92JSfk7EZkLfGiMmZvuwUr5CR25q9xgGbDU6SCUykk6cldKKT+kI3ellPJDjvXCKFmypAkNDXXq\n9Eop5ZM2bNhw0hhTKr3jHEvuoaGhrF+/3qnTK6WUTxKRDC1C07KMUkr5IU3uSinlhzS5K6WUH9LN\nBZRSWZaUlERUVBQJCQlOh+I3QkJCqFChAnny5MnU72tyV0plWVRUFIUKFSI0NBR3S32VBcYYTp06\nRVRUFJUrV87Uc2hZRimVZQkJCZQoUUITu4eICCVKlMjSNyFN7kopj9DE7llZfT81uedm+/fDmTNO\nR6GUygaa3HOjyEjo2BFuugmKFYMSJWDoULiYqZ3xlPIaM2fORETYuXPnNY+bNGkSR44cueYx17Js\n2TK6d++e6d/PCZrcc5tnnoFWrWDbNhg9Gt56C7p2hY8+grAwOHTlrnFK+Y6pU6fSpk0bpk6des3j\nsprcfYEm99zk/ffhnXfgscdg3z549lmb7L/6Cn74AXbuhKZN4ehRpyNV6rqdO3eOlStX8tlnnzFt\n2rTL948ZM4a6detSv359Ro4cyfTp01m/fj33338/DRo04MKFC4SGhnLypN0ieP369bRv3x6AdevW\n0bJlSxo2bEirVq3YtWuXEy8tU3QqZG4xezY89RT06gXjx0PAFZ/rvXpB1arQvDkMGADz5oFeIFOZ\n8dRTsGmTZ5+zQQMYO/aah8yaNYvw8HCqV69OiRIl2LBhAydOnGDWrFmsXbuW/Pnzc/r0aYoXL86H\nH37I22+/TZMmTa75nDVq1CAiIoKgoCAWLVrEv//9b77//vtr/o630OSeGxw7Bg88AE2a2FH6lYn9\nkrp17cj+H/+wZZqhQ3M2TqWyYOrUqQwbNgyAe++9l6lTp2KMYcCAAeTPb/dkL168+HU9Z2xsLA8+\n+CC7d+9GREhKSvJ43NlFk3tu8MILkJAAU6aA+x95mgYPhp9+guHDoVMnqFkzZ2JU/iOdEXZ2OH36\nNEuWLGHLli2ICCkpKYgIvXv3ztDvBwUF4XLZPdJTzy1//vnn6dChAzNmzODAgQOXyzW+QGvu/m7L\nFvjsM3j8cahWLf3jReDzzyFvXvjPf7I/PqU8YPr06fTr148//viDAwcOcOjQISpXrkyRIkX44osv\niI+PB+yHAEChQoWIi4u7/PuhoaFs2LAB4C9ll9jYWMqXLw/Yi7C+RJO7PzMGnn4aihSB55/P+O+V\nKQPDhtmLrJs3Z198SnnI1KlT6dWr11/uu+uuuzh69Cg9evSgSZMmNGjQgLfffhuAhx56iMGDB1++\noPriiy8ybNgwmjRpQmBg4OXnGDFiBKNGjaJhw4YkJyfn6GvKKsf2UG3SpInRzTqy2aJF0KWL/Zrs\nrkVm2OnTEBoK4eHw7bfZEp7yHzt27KCmlvA87mrvq4hsMMZc+0owOnL3b++9Z0fhgwdf/+8WLw5P\nPAHTp9s58Uopn6LJ3V/t2WOnMz72mK2fZ8Y//2kvwL7xhmdjU0plO50t468mTIDAQJvcr2LRIltO\nv3DBluQHDIACBa44qGRJeOQROy9+3Dh7WynlE3Tk7o/On7czXu66C8qV+8tDR47A3XfbUvzTT9sJ\nMU88AdWrw+TJ4J4N9qeBAyEpyc6PV0r5DE3u/mjKFNvt8Ykn/nL3L79ArVp2Gvsbb0BMjO0VtnIl\nlC8PDz5oZ0z+5Rp73brQrJmdTunQxXel1PXT5O6PPvkE6te3DcLcjhyBO+6wTSC3bIFRo6BoUQgO\nhtatYc0aO5L/+GO7SPUvBg6ErVvtp4NSyidocvc3u3fD+vXQr9/l3jAJCbZ1TGysbTFztbVMAQHw\n5pvQu7ddnPqX9hn33msvrH76ac68BqUyITAwkAYNGlCnTh169+59eeFSZqRu6Tt79mxGjx6d5rFn\nzpxh/Pjx132Ol1566fK8++ygyd3fXOqGd889l+8aPhzWrYP//c9WWdISEABffgktWsDDD8OJE+4H\nChe2WX/aNFvPV8oL5cuXj02bNrF161aCg4P5+OOP//K4MeZyi4Hr0aNHD0aOHJnm45lN7tlNk7s/\nMQamTrV92StUAOwU9fHjbQ+wKxbwXVW+fPDFFxAff0X3gYcegrg4mDs3W0JXypPCwsLYs2cPBw4c\n4Oabb6Z///7UqVOHQ4cOsXDhQlq2bEmjRo3o3bs3586dA2D+/PnUqFGDRo0a8cMPP1x+rkmTJjHU\n3UTv+PHj9OrVi/r161O/fn1Wr17NyJEj2bt3Lw0aNGD48OEAvPXWWzRt2pR69erx4osvXn6u119/\nnerVq9OmTZtsbx+c7lRIEfkc6A6cMMbUucrj9wPPAgLEAUOMMb95OlCVAZs3w44dNpu7DR9uB94v\nvZTxp6lRw16LHTsWhgyBhg2xHxilStl6TQabMancyaGOv5clJyczb948wsPDAdi9ezdffvklLVq0\n4OTJk7z22mssWrSIAgUKMGbMGN59911GjBjBo48+ypIlS6hatSr3pPrmm9qTTz5Ju3btmDFjBikp\nKZw7d47Ro0ezdetWNrlf9MKFC9m9ezfr1q3DGEOPHj1YsWIFBQoUYNq0aWzatInk5GQaNWpE48aN\nPfL+XE1G5rlPAj4EJqfx+H6gnTEmRkS6AhOB5p4JT12XadPs3Pa77wZg4UK7juntt+1OetfjhRfs\n7Mcnn4QVK0ACA+0V2alTbRE/JCQbXoBSmXfhwgUaNGgA2JH7wIEDOXLkCJUqVaJFixYArFmzhu3b\nt9O6dWsAEhMTadmyJTt37qRy5cpUc1+QeuCBB5g4ceLfzrFkyRImT7apMDAwkCJFihATE/OXYxYu\nXMjChQtp2LAhYDcR2b17N3FxcfTq1ety++EePXpkw7vwp3STuzFmhYiEXuPx1alurgEqZD0sdd2M\nscm9c2coVQqXy26ydNNNmWvLXrQovP46DBoEc+ZA9+7YefOffGI/NbL5H6byXQ50/AX+rLlfqUCq\n1XnGGLp06fK3bfiu9nuZZYxh1KhRPHbFAsKxOfzGeLrmPhCYl9aDIjJIRNaLyPro6GgPnzqX+/VX\nOHDg8oXUuXPtlMdXX81894GHHoKKFeHdd913dOxo51L6yE40Sl2pRYsWrFq1ij179gBw/vx5fv/9\nd2rUqMGBAwfYu3cvQJp7sHbq1IkJEyYAkJKSQmxs7N/aB9966618/vnnl2v5hw8f5sSJE7Rt25aZ\nM2dy4cIF4uLi+PHHH7PzpXouuYtIB2xyfzatY4wxE40xTYwxTUqVKuWpUyuwK5NE3ENs2y2gfPms\nlcfz5LG196VL3TXUPHnsiH32bEhM9EzcSuWgUqVKMWnSJPr27Uu9evUul2RCQkKYOHEit912G40a\nNaJ06dJX/f1x48axdOlS6tatS+PGjdm+fTslSpSgdevW1KlTh+HDh3PLLbdw33330bJlS+rWrcvd\nd99NXFwcjRo14p577qF+/fp07dqVpk2bZu+LNcak+wOEAluv8Xg9YC9QPSPPZ4yhcePGRnlQkybG\ntGxpjDFm61ZjwJg33sj608bEGFOggDH9+7vvmD3bPvn8+Vl/cuU3tm/f7nQIfulq7yuw3mQgx2Z5\n5C4iNwI/AP2MMb9n9flUJhw5YhcuuUft779vr3cOGpT1py5a1M55nzoVjh7FNqUpWBBmzcr6kyul\nsk26yV1EpgKRwM0iEiUiA0VksIhcahL+AlACGC8im0REd+DIaZfmnt9+O6dP28VKDzxw/TNk0jJs\nGCQnu2dYhoTYvVXnzdNeM0p5sYzMlumbzuOPAI94LCJ1/X76CW68EerUYdJ7to3vFT3DsqRKFeja\nFSZNgpdfhoDwcDty37XLTopXClviFXfLC5V1JouDJ12h6usSEuDnn21JRoT//c82caxXz7On6d8f\noqJg2TJspgeYP9+zJ1E+KyQkhFOnTmU5ISnLGMOpU6cIycJ6Et2sw9ctXWp7Bdx+O1u32lkt77/v\n+dP06GFXuk6eDB0nVYKaNW1p5qmnPH8y5XMqVKhAVFQUOsXZc0JCQqhQIfPLhjS5+7r5821DmPbt\nmfKyXaCaxsrpLMmXD/r0sRdWP/oICoSH2yJ8fLztGKlytTx58lC5cmWnw1CpaFnG1/38M7Rtiys4\nhClT4NZbIY0pulnWr59tCjljBrY0c/Giu06jlPI2mtx92eHDtlFY585ERMChQ3aWTHZp0wZCQ21p\nhrAwO2Kfl+aCZKWUgzS5+7LFi+2fnTvz1Vd2+nnPntl3uoAA++GxaBEcjw2BDh00uSvlpTS5+7JF\ni6BUKZJr1eOHH2zTxuwuf/fubae3z5qFXdC0dy/88Uf2nlQpdd00ufsqY2xy79SJiFUBnD4Nd96Z\n/aetW9d2mpwxA9tIDOyMHaWUV9Hk7qu2b7f9ADp3ZuZMu3D0lluy/7QidkenxYshtkJtu4HHkiXZ\nf2Kl1HXR5O6rFi0CwHSyyf2WWyBV2+ps1asXJCXB3PkB0L69Hbnr4hWlvIomd1+1aBFUq8ammEoc\nPGjr7TmlZUsoWzZVaSYqCtz9sZVS3kGTuy9KTobly6FjR2bOtLNY3A0hc0RAgJ2VM28eJLTuZO/U\n0oxSXkWTuy/atAni4qBdO2bOtPPPc3rvk1694Nw5WHSgqt0VRJO7Ul5Fk7svWr4cgP2VO7J5c86W\nZC7p0AEKFYKf5ogtzWjdXSmvosndFy1fDlWrMndDGSBnSzKXBAenauvevgNER8PWrTkfiFLqqjS5\n+5qUFIiIgHbtmD/f9lqvVs2ZULp2hYMHYeeN7jmYK1Y4E4hS6m80ufuarVvhzBkuturAkiUQHu5c\nKJfaus/7rRxUqGA/dJRSXkGTu69x19tXhnQmPv7PBOuEihWhdm2YN19sI7EVK7TurpSX0OTua5Yv\nh9BQ5v1ahuBgu4bISeHhNqefa9rBrpjdt8/ZgJRSgCZ332KMzaRt2zJ/PrRtm3OrUtPStSskJsLS\nPO66u5ZmlPIKmtx9yY4dcPIkh+p2Y9s2Z+vtl7RpYz9g5m27EYoV0+SulJfQ5O5LVq8GYMHFdoB3\nJPe8ee2UyPkL3HV3Te5KeYV0k7uIfC4iJ0TkqpOYxXpfRPaIyGYRaeT5MBUAkZFQogQLNpWhQgWo\nVcvpgKzOnWH/fthfuzvs3g3HjjkdklK5XkZG7pOAa40RuwLV3D+DgAlZD0tdVWQkruYtWbpU6NzZ\ntt/1Bp3c7WUW4/6Ljt6Vcly6yd0YswI4fY1DegKTjbUGKCoiN3gqQOUWEwM7dvBbaE9OnfozoXqD\nmjXhhhtg8d5QuxWUJnelHOeJmnt54FCq21Hu+/5GRAaJyHoRWR8dHe2BU+cia9cCsDjF1tsvbYLk\nDUTsh83ipQG4mrW4fG1AKeWcHL2gaoyZaIxpYoxpUiqn2xj6ushICAhg8d7K1KgB5co5HdBfderk\nbi9TtaftWnn+vNMhKZWreSK5HwYqprpdwX2f8qTISBJrNSAiMsirSjKXXIppkels+9+sX+9sQErl\ncp5I7rOB/u5ZMy2AWGPMUQ88r7rE5YK1a1l3072cP+9d9fZLKlaE6tVh8R9V7R2Rkc4GpFQuF5Te\nASIyFWgPlBSRKOBFIA+AMeZjYC7QDdgDxAMDsivYXGv7djh7lsUBXRCBdu2cDujqOnWCyZODSape\nmzxad1fKUekmd2NM33QeN8DjHotI/d2aNQAsjqpOo0ZQvLjD8aShUyeYMAHWVelL68ixtl2Ct8zX\nVCqX0RWqviAykvjiFVjzWz6vmiVzpUvfKJbnvQVOntRNs5VykCZ3XxAZyZpq/UhKEse7QF5LyZK2\nBfCK6Br2Dq27K+UYTe7ezr14KaJAOCLQqpXTAV1b27aw6reCJBcqpvPdlXKQJndv5168FHGmDvXq\nQdGiDseTjnbt4Nw5YWOt+3XkrpSDNLl7u8hIkiSYyJ3FCAtzOpj0tW1r/1xe+Ha7JeDZs84GpFQu\npcnd20VGsrFqb+LjxSeS+w032A27V8Q1sPPz161zOiSlciVN7t7MvXgposQdAD6R3MGO3iN2lCKF\nQC3NKOUQTe7ebMcOOHuWFRebUaWKHRX7gnbt4EyssLVKT72oqpRDNLl7s8hIXAgr95e/XMv2BZfn\nu5fubRdguVzOBqRULqTJ3ZtFRrKjSEtOnwn0mZIMwI03QqVKsCKxBZw5Azt3Oh2SUrmOJndvFhlJ\nRMX7AN+pt1/Srh2s2F8BA1p3V8oBmty91aXFSwHtKFsWqlRxOqDr07YtRJ8OYmeRFprclXKAJndv\ntXYtBlhxtCphYb7Xf+ty3b3iA3pRVSkHaHL3VpGR/CGViYoO8bmSDHB5ds+KgHZ21k9MjNMhKZWr\naHL3VpGRRFSw3ZZ9Mblf6ju//HA1W3d3ty1WSuUMTe7e6NLipQLhFCkCdes6HVDmtGsHR07lZZ9U\n1eSuVA7T5O6N3IuXImLr0ro1BAY6HVDmXO4zU/4+vaiqVA7T5O6NIiOJpiQ7jxb1yZLMJTVr2h7v\nK/KH2+6WuphJqRyjyd0bRUaysmBXwDfr7ZeI2NH78tN1bHdIXcykVI7R5O6NIiOJKHUnefNCkyZO\nB5M1bdvCgZOFOEQFLc0olYM0uXsb9+KlFReb07w55M3rdEBZc+mbR0SBcL2oqlQO0uTubdauJY6C\nbDxW1qdLMpfUrw+FCkFE8Ts0uSuVgzKU3EUkXER2icgeERl5lcdvFJGlIrJRRDaLSDfPh5pLREYS\nKa1xucSnOkGmJTDQ7vsacbEpbNumOzMplUPSTe4iEgh8BHQFagF9RaTWFYf9B/jWGNMQuBcY7+lA\ncw13vT0gAFq2dDoYzwgLg20nSnPKFNOdmZTKIRkZuTcD9hhj9hljEoFpQM8rjjFAYfffiwBHPBdi\nLnJp8VJgexo2tOUMf3CpvLSK1lqaUSqHZCS5lwcOpbod5b4vtZeAB0QkCpgLPHG1JxKRQSKyXkTW\nR0dHZyJcP7djBxfPJrD25E1+UW+/pFkzCA7GbheoyV2pHOGpC6p9gUnGmApAN+B/IvK35zbGTDTG\nNDHGNClVqpSHTu1HIiNZTxMSkoL8KrmHhEDTphAR0M4md2OcDkkpv5eR5H4YqJjqdgX3fakNBL4F\nMMZEAiFASU8EmKtERhKR/1YA2rRxOBYPCwuDDacqc/7UBdizx+lwlPJ7GUnuvwDVRKSyiARjL5jO\nvuKYg0AnABGpiU3uWne5XpGRRBToys03Q+nSTgfjWWFhkOwKYC3NtTSjVA5IN7kbY5KBocACYAd2\nVsw2EXlFRHq4D3saeFREfgOmAg8Zo9+9r0tMDCk7drEqrq5fTIG8UqtWIGKICO6syV2pHBCUkYOM\nMXOxF0pT3/dCqr9vB1p7NrRcZu1atlKH2ATf3JwjPUWLQr16QsTBcIh8xOlwlPJ7ukLVW0RGEiF2\nyO6PyR3s64o8V4ek37bD+fNOh6OUX9Pk7i3WrCGicHcqVIBKlZwOJnuEhUF8UjAbXfVgwwanw1HK\nr2ly9wYuF2bNWlYktfDJzbAz6nITMcK0Q6RS2UyTuzfYsYO9Z0tyLL6I35ZkwG6YXaWKdoj0NcZA\ncrIuT/A1mty9QWSkHc3iv/X2S8LCYGVyC1yRazVbeDFjYPFiGDTITsvNkwcCAqBUKXj8cdsiSP/z\neTdN7t4gMpKIvJ0pXtxQ68qWbH4mLAxOXSzEzuNF4eBBp8NRV3HkCHTvDp07w9Sp0KULvPwy/Oc/\n0KkTfP45NG8Od94JJ086Ha1KS4amQqpsFhlJROCrtGkjBPj5x23qunutyEj/vXrso2bNgocegosX\nYexYO3LPl++vx8TGwoQJ8MILtl//V19Bhw6OhKuuwc9TiQ+IieHojhj2xJfz+5IMQNWqUKaMISKw\nvdbdvcz06XDXXfa/0aZNMGzY3xM7QJEiMHKkLc0ULgzh4TB/fs7Hq65Nk7vT1q7NNfV2sDOBwsKE\niKAOmty9yPffw733QosWsGQJVK+e/u80aACrV0OtWtCrFyxblu1hquugyd1pkZFE0Jb8+Q2NGjkd\nTM4IC4ODF8tycEM0JCQ4HU6ut3Yt9O1r6+jz5l3fPgLFisHChXDTTbZOv3lz9sWpro8md6etWUNE\nSBdatBDy5HE6mJxxue6e3AI2bnQ2mFzu1Cno3RvKl4effroisaek2Gz/z39C//7Qs6e9qrp8OSQm\nXj6sVCn4+WdbounTB86dy/nXof5Ok7uTXC7OrNnJ5oRquaIkc0m9elC4kMuWo7Q04xiXC/r1g+PH\nbb29WLFUD3z0kS2+d+sGEydCRIRt1Tx6NLRvD9WqwcyZl+dDlisHU6bA7t12qqRyniZ3J23fzuqz\ntTEE+GUnyLQEBkKr1gFE5Omoyd1B48bZgfnYsdC4sfvO6GhbXxk6FCpUgG++gZgY2L/fbnB+6pT9\nJChSxBbab78dTp8G7IyZF16AyZPtj3KYMcaRn8aNG5tc7+OPzUjeMEFBLnP+vNPB5KzXXzcGjDlZ\nrq7ToeRKBw4Ykz+/Md27G+Nyue/cts2YcuWMCQ425qOPUj1wFUlJxrz7rjF58xpTu7YxUVHGGGOS\nk40JCzOmWDFjjh/P/teRGwHrTQZyrI7cnbRqFRF5OtK4MeTP73QwOetSGWrlkcpw+MqNvVR2MsaW\nTkRs9UUE2LvXrlpyuey3qX/849pNjoKCbC1+3jy7GK1NG9i7l8BA+O9/bd19+PAce0nqKjS5O+hC\nxHrWJTciLMxPO4VdQ9OmEJzHXXdfu9bpcHKV6dNhzhx49VW48Ubg0CG79DQxERYtgoYNM/5kHTrA\n0qUQF2fr82fOULOmTeyTJ+v0SCdpcnfKsWOsO1CKJJMnV11MvSQkBJo1xfawX73a6XByjfh4O+Bu\n1AieeAK7FLVXL1tXX7AAate+/idt3BhmzIB9++C++yAlheeeg8qVYcgQSEry+MtQGaDJ3SmrVl1e\nvNQ6l+5hFdYugF9pxPkV2ts+c19cAAAgAElEQVQ9p4wbZ6tgY8faygojRtje+l9+meqqaiaEhcGH\nH9oyzXPPkT+/PdfOnfDZZx4LX10HTe5OWbWKiIB21KntokQJp4NxRlgYJJsg1vwabIeUKludPGln\nMvbo4b7mMWMGvP++7TNwxx1ZP8Fjj9lmNGPGwLJldO9uS/Evv6wbbzlBk7tDkleuYbW0Jqxt7v1P\ncHnT7JSW8MsvTofj9157zV7o/L//w05uHzjQjtbHjPHcSd591zbtf/hh5Pw5xoyBY8fsKF7lrNyb\nWZwUH8/GXw3nUvLTrp3TwTinSBGoXyfFlqdWrnQ6HL924ACMHw8PP2x7wfCvf9lM/9VXkDev505U\noAB88YU94ahRtGplvymMGWOnyKuco8ndCb/8wrKUNgC5OrkDhLUPYo20JGmFbruXnf7v/+zMxpde\nwvYK+PprGDUKatTw/MnCwuDJJ20NftUq3njDTqZ56y3Pn0qlLUPJXUTCRWSXiOwRkZFpHNNHRLaL\nyDYR+dqzYfqZVatYRnturppC2bJOB+OssDCIN/n5dWW87WWiPO7QITuYHjgQyhe/YKewVKtmk3t2\nef11u8J12DBq13TRp4+dU+9ezKpyQLrJXUQCgY+ArkAtoK+I1LrimGrAKKC1MaY28FQ2xOo3kleu\nISKgHe07BTodiuMuNxGLbwRbtzobjJ968027cOnZZ4H33rMLlsaPt/NRs0uBArYW456J8+9/2yrQ\nBx9k3ynVX2Vk5N4M2GOM2WeMSQSmAT2vOOZR4CNjTAyAMeaEZ8P0Iy4XG1eeJ85VkPbtnQ7GeWXL\nQtXQJK27Z5OjR+GTT+DBB6FS/mg7XaZnT7saNbv17WsbxP/739SrHEePHvbCalxc9p9aZSy5lwcO\npbod5b4vtepAdRFZJSJrRCT8ak8kIoNEZL2IrI+Ojs5cxL5u506Wx9kVgLm93n5JWPsgVkpbXBGr\nnA7F77zzDiQnuyswr75qp5yOHp0zJxex2fzYMfi//+O55+xaqQkTcub0uZ2nLqgGAdWA9kBf4BMR\nKXrlQcaYicaYJsaYJqVKlfLQqX3MpXp75URuuMHpYLxDWFvhtCnGjqXHLreQVVkXG2u79fbpA1XM\nHptVH3kkey6ipqVZMzuCHzeOZpWO06WLnS158WLOhZBbZSS5HwYqprpdwX1falHAbGNMkjFmP/A7\nNtmrKyRHRBIhbWnXOZfszJEBl+vuJ6rbJlTKIz75xJZAnnkGeP55CA6GF1/M+UBeesnuuDV6NMOH\n2yn2X+uUi2yXkeT+C1BNRCqLSDBwLzD7imNmYkftiEhJbJlmnwfj9BublsZw1hSmfYfc1ywsLVWq\nwA2lklhBW627e0hSkq2IdOgAjUK2277sw4bhyNfF6tVt0X/CBDrXPEzdunb0rl/Ssle6yd0YkwwM\nBRYAO4BvjTHbROQVEenhPmwBcEpEtgNLgeHGGF2ycKXjx1kWVQXQentqItC+UyBLpSMmQpO7J3z7\nLURFwdNPY5em5s9vFy455fnnISUF+b83+Ne/7MSon392LpzcIEM1d2PMXGNMdWNMFWPM6+77XjDG\nzHb/3Rhj/mWMqWWMqWuMmZadQfus1atZTjuqV7xAuXJOB+NdOnQM4Jgpy64l2ts9q4yBt9+GmjWh\na+WdMG2abeBesqRzQVWubCfaf/IJfcOiKFvWjt5V9tEVqjkoJWI1K2hL+1uCnQ7F63ToYP9curu8\nnVKhMm3VKti0CZ56CgJGvwH58rmH8A4bORJcLvJ++A5Dh9oOw9u2OR2U/9LknoM2/RzNWYro4qWr\nqFIFKpRKYCkdtL97Fk2YYPv23N9yn921esgQKF3a6bAgNNT2e584kcfuPkXevHbVqsoemtxzyvnz\nLNtup39qvf3vRKBD5yCW0V7r7llw4gR89x307w8FPn7HNm13stZ+pWefhfh4Sn79PvfcA//7H5w9\n63RQ/kmTe06JjGSZqy3Vyp/XensaOnQJIprSbFuodffM+vxzO1NmyD2n7Y1+/fCqf3C1a9sVsh98\nwOMPnefcOZvgledpcs8hKUtXEEEY7bvo/Pa0XK67by5h50Wr65KSYjenbt8eai4cZ9/DZ55xOqy/\nGzUKYmJounEijRvb0oxOi/Q8Te455Ld5R4ilKO276MXUtISGQmjp8yxJaaubd2TC/Pm2jfqQAQm2\n3W7Pnjm7GjWjmjeH1q2RDz/g8SEuduyA5cudDsr/aHLPCRcusGxzcUDr7enp0DmQ5bQjZekKp0Px\nORMm2EZsd5z+3PbWHTHC6ZDS9tRTsH8/9xb8ieLF9cJqdtDknhPWrGFZShuqlTtH+Stbrqm/6NQt\nhBiKs+nHQ+kfrC47cADmzoVHBhqCx4+1o+NWrZwOK2133AE33ki+Ce/y8MN2O9fDeqnFozS554Dk\npREso73W2zOgUyf758+bSml3qevw3//aGUeDqi+D3bttqwFvFhQETzwBy5czuO12XC7bC0d5jib3\nHLDupxPEUZgut3lwr0o/VbYs1K10lkXJ7WDNGqfD8QkXL8Jnn8Htt0PFr8fY/jF33eV0WOkbOBAK\nFKDKD28RHm47WCYlOR2U/9Dknt0uXmTRltIILjp2dDoY39ClezAracOFhRFOh+ITfvgBoqNhSPdD\ndtnnP/5hO0B6u2LF4KGH4Ouvefy+GI4eteUZ5Rma3LPb2rX8nNyBxlVjKVHC6WB8Q+fbQrhICCt/\n1DYEGTF+vF3h2+XXMTapDxrkdEgZ9+STkJhI+O4PqFxZL6x6kib3bBY3N4I1tKBz93xOh+Iz2raF\nPAHJ/LytHFy44HQ4Xm3LFtslefCDFwiYPMku7/eGVgMZVb063HYbgR9/xOBHklmxQvvNeIom92y2\nfHYsyeShy+3ZuBmxnylQAFrVjmWRS/vMpOfjjyFvXhjAF3D+vB0J+5qnnoITJxhQaDrBwfbisMo6\nTe7Z6dw5Fu2sQEhQklfPSvNGXe4oyEYaEf3TWqdD8VpxcTB5MvTp7aLE52/ZLa0aNnQ6rOvXqRPU\nrk2pL96kd2/Dl1/azymVNZrcs9OKFfxsOtG2/llCdOB+XTq7ZxYt/knLMmmZMgXOnYN/1F1pJ7r7\n4qgd7BzOp56CjRsZ3OI3zp61LehV1mhyz0ZHZv3CdmrT+c7CTofic5o0geL54pm/pyqcOeN0OF7H\nGLsitUEDaD7vJahY0S4M8lX33QfFitF6+RvUqWNfm8oaTe7ZaME8FwC33KaLl65XYCDc0uoc87kV\n16IlTofjdSIjYfNmGNIjClm21O60FBTkdFiZlz8/PPIIMuMHBt8Tw4YNsH6900H5Nk3u2SU6mnmH\nalOuUBz16jkdjG/qel9xjlOWTdN2Oh2K1xk/HgoXhvsOvQkhIfDII06HlHVDhoDLRb/YDylQQEfv\nWaXJPZskL1rGz3QhvP0FRJyOxjfdepsdic5bqit7U4uOdm/IcU8CBb/5DO6/H79YRFG5Mtx+O4W/\n/ID77klh6lStyGWFJvdssmbqfs5QjK73+8H/dA4pUwYaVTzB/NPNYN8+p8PxGl98AYmJMLjoNxAf\nD0OHOh2S5wwdCtHRDAmdx4ULdjaQyhxN7tnBGOYtz0+gpND5Vt0vNSu63hZIJC05M0sbfgO4XHZu\ne7t2htrfvwJt2tirqv6ic2eoUYOGP75Cs2b2tepGHpmToeQuIuEisktE9ojIyGscd5eIGBFp4rkQ\nfdCOHcw724pWVU9QtKjTwfi2rvcXJ4Ugfp52yulQvMKCBbB/PwxpvtF+m/GnUTvYaZFDh8IvvzDk\n1n3s2AErtLV/pqSb3EUkEPgI6ArUAvqKSK2rHFcIGAbk+lUnx75dwUYaEX6HthzIquYthKLB55m3\nsSwkJzsdjuMmTLDlql6bXrTdH++80+mQPK9/fyhUiD67X6doUTt6V9cvIyP3ZsAeY8w+Y0wiMA3o\neZXjXgXGALl+88sF0+MA6NpXh+1ZFRQEtzY5zdykzrhW5+4WwH/8AT/9BI/0OkXwwp9g8GDI44fT\nbAsVgoceIv/3/+OhPuf5/ns4ftzpoHxPRpJ7eSD1tjhR7vsuE5FGQEVjzJxrPZGIDBKR9SKyPjo6\n+rqD9QnnzzNnR2XKFjjrV6VQJ/UYUILjlGXdJ785HYqjJk50b8hx8QOb1H2p++P1evxxSErisZDJ\nJCXZi8jq+mT5gqqIBADvAk+nd6wxZqIxpokxpkmpUqWyemqvdHFRBPNdt3B7u7M6BdJDut2dnyBJ\nZtb83DslMjERPv0Ubrs1mRu/fw9697Y7m/irm2+GW26hxvTX6NDexX//CykpTgflWzKS3A8DFVPd\nruC+75JCQB1gmYgcAFoAs3PrRdVln+8jjsL0fMSH2q56uaJFoV3Vw8w62QoOHnQ6HEf88AOcOAH/\nqDwPzp61W9T5uyeegCNHGNxgDQcOwMKFTgfkWzKS3H8BqolIZREJBu4FZl960BgTa4wpaYwJNcaE\nAmuAHsaYXLl4ePbywuQPTKBjuA/shONDevQOYQe12P3FSqdDccSECXDTTYZbloyExo3tBtj+rmtX\nqFyZO375D2XK6IrV65VucjfGJANDgQXADuBbY8w2EXlFRHpkd4C+xOzcxezYdtxa5zD5dKKMR/V8\n1H4Tmj0t3uFIct7mzXY64OBOewjYud2OaHNDzS8wEB5/nOBVSxnY/Thz5uTaL26ZkqGauzFmrjGm\nujGmijHmdfd9LxhjZl/l2Pa5ddT+6/g1RFGRHv11loynVQoV6peMYtauGnZVZi7ywQeQLx8MPPwK\nlCwJ99zjdEg55+GHIV8+BsW9gzHwySdOB+Q7dIWqB82emUIAKdzWT1sOZIeet15klWnJyRm5Z+Ps\nU6fgq6+g3x1xFJ//NTz6KLlqc4BixeCBB6g0+wO6dUnk008hKcnpoHyDJndPOXGCWYca0erGKPx0\nIpDjej1ZEReBzPz4mNOh5JhPP4WEBHgi36f2jiFDnA3ICUOHQkICQ8r/yLFjMGuW0wH5Bk3uHrLv\ni+X8RgN63unDPbW9XP2mwVQteIxv196YK1arJifDRx9Bx/Yp1Jn5mt2Mo2LF9H/R39SrB23bEr5k\nBJUqGV2xmkGa3D3ku8l2O7i7nyzncCT+SwT6dIlhSVJYrthbddYsOHQInqy9GE6f9r8+MtfjiScI\n/GMfg8J2sngx/P670wF5P03unnDhAt/trEOz0gcIrZwLZjE4qM+IUFIIYsb7h9I/2Me9/z6Ehhq6\nL/qn7fzYvr3TITnnjjugQgUe/uNFgoJ0WmRGaHL3gH1frWaDqxG9e1x0OhS/V695PqoXPMy3q8vb\n/rd+atMmO/1xaMcdBO7aDsOH547pj2kJCoLBgykb8R19bo3ls88gNtbpoLybJncP+G7CSQDuHl7Z\n4Uj8nwj06XSapRdbEb1wo9PhZJsPPrDbij68c4Sts/fu7XRIznv0UQgO5l/5xhMXZy82q7Rpcs+q\nhAS++606zUruI7S6rkrNCb2fqYSLQL5/9w+nQ8kWJ0/ClCnwYNcTFFs9B/75T//s/ni9SpeG+++n\n8ZxXadcqkXHjcsV19UzT5J5F+yavZIOrIb17JjodSq5Rt3VhahY4yJQVFf1ym55PPoGLF2HoudFQ\npIh/bH7tKcOHw4ULPH3jdA4dgunTnQ7Ie2lyz6Jvxtsdgu5+torDkeQeItC/20lWXmzK3u9+dToc\nj7p4ET78EDq3vkCtn8fBY4/Z/ubKqlkTevTgtgVPUr2ai3fe8cvPd4/Q5J4FJv4Ckzc3IKzs74RW\n06/NOemBV6ojuJj8pn8taJoyBY4cgeElv7C9VZ580umQvM+IEQTEnOKfDZezfj2szJ295NKlyT0L\n1n+0lp3mZvr31cJfTqtQoyCdymxj8sY6uBL8oyTmcsFbb0HDesl0WTgc7rsPypdP/xdzm9atoXVr\n+kcOoUQJwzvvOB2Qd9LkngX/+ySBvCTQ+7nqToeSKz34QAoHXJVY+d4vTofiET/+CDt3wogaPyIX\n4uGZZ5wOyXuNGEH+Q7sYEraN2bNh926nA/I+mtwzKTE6lqm7G3NH1a0UKaEtB5zQ6z+1KSjn+PIT\n3x+5GwNjxkDlUBd3LxsK4eFQp47TYXmv7t2hZk0e/30YefIYxo51OiDvo8k9k+a/vJaTlKLfEL3Y\n5ZQCRfPQ++YtfLu/CeeOnHU6nCxZsQIiI+HpphEEnTgCI0Y4HZJ3CwiA4cMpu30J97c/whdf2A4N\n6k+a3DPpy2nBlA48yS1DtSTjpEHPFOYchZgyfJPToWTJyy9D2bKGh1c/Am3a5O5WAxl1331Qrhz/\nPPMiFy7YWUbqT5rcM+FY5H5mn2rNAy33kSc4Fy8J9wLNB9SiYb4dfPTDDRiXb86Ji4iApUvh2Tar\nyXd4D7z4Yu5uNZBRefPCU09Rd91n3B52hrFj7fayytLkngmf/3sPyeThsTcqOR1KricBwuN3HmNL\nQjVWfbbT6XAy5eWXoUwZw2NrBkDLltCpk9Mh+Y7HHoOiRXmeV4mJgfHjnQ7Ie2hyv04pSS4mRtSg\nU/GNVA8r43Q4Cuj7ViOKcIbxY3xv2LZqFSxeDCPC1pAvaje88IKO2q9H4cLwr3/RNOJdbm0Zyzvv\nwPnzTgflHTS5X6cF//crf6RUZHB//RfkLfLfUIQBtX9h+t6GHN8T53Q4GWYM/Oc/ULq0YfDKB+yo\n/dZbnQ7L9wwbBsWK8by8zsmT8N//Oh2Qd9Dkfp0+Hp9C2YDj9HytmdOhqFSGvFSGJIIZ/6TvlGbm\nz4dly+D5lovJf2wfjB6to/bMKFwYnn6a1qvfomOTs4wZo6N30OR+Xf5YeYg5x5swsOUO8hTQDpDe\npPpddbmj6FI+WFCNc2e9v897Sgo8+yzcFJrCoOX323ntbds6HZbveuIJKF6cVwNf4sQJGDfO6YCc\nl6HkLiLhIrJLRPaIyMirPP4vEdkuIptFZLGI+OWVxrFPHSAAF4+9e7PToagrifDs0ynEuIoycdg2\np6NJ19dfw5Yt8Hr97wg+cwLeeMPpkHxb4cIwciSt1r5H95YnefNNiIlxOiiHGWOu+QMEAnuBm4Bg\n4Deg1hXHdADyu/8+BPgmvedt3Lix8SWnj1wwBYgzD1Rc5nQoKi1JSaZ9yGpTLviESUhwOpi0xccb\nc+ONxjSqc9Gk5M1nzL33Oh2Sf4iPN6ZCBfNb7b4GjBk1yumAsgew3qSTX40xGRq5NwP2GGP2GWMS\ngWlAzys+IJYaY+LdN9cAFbL6oeNt/vvkNs5TkKf/k8/pUFRagoIYNeA4RxJL8dVLe5yOJk1vvgkH\nD8LbJUcTIMbW2lXW5csHr75KvW1T6dv6D8aNg6NHnQ7KORlJ7uWB1LsRR7nvS8tAYF5WgvI2Fy+4\neH9mRToXjKTBo02dDkddQ5c3u9AocBNvvF+QRC9sObN/v83l93SMpsOyF23hvZJfVjGd0a8f1K3L\nq4cGkJRkeO45pwNyjkcvqIrIA0AT4K00Hh8kIutFZH10dLQnT52tvh6+kaPJpRk+NEFnM3g5KViA\n1/psYV98WT5+7lD6v5DD/vUvCAw0vH28n90bVXvIeFZgIIwZQ5WDSxnWaj2TJsGGDU4H5ZD06jZA\nS2BBqtujgFFXOa4zsAMonZF6kK/U3BMvukyVvAdNg+CtxpWY5HQ4KgNcMWdMh6AVpmSeMyY21ulo\n/jRnjjFgzOjbV9q/TJvmdEj+q1s3c6ZgeVOqRLJp08YYl8vpgDwHD9bcfwGqiUhlEQkG7gVmpz5A\nRBoC/wV6GGNOeOhzxyt8OWoney9W5NVHDiJ5tLWvL5CiRXhzyH5OJhXhzaEHnQ4HgDNnYNAgqFUt\nkacW326nPvbp43RY/mvsWIokRvN6tS9ZuRK++87pgByQkU8AoBvwO3bWzHPu+17BJnOARcBxYJP7\nZ3Z6z+kLI/eEBGMq5j1mmudZb1zxF5wOR12P+Hhzb74ZJl/ABXPwD+eHbQ8/bExgoMusa/mkMQUK\nGHPggNMh+b+RI00yAaZh9ThTrpwxZ844HZBnkMGRe4aSe3b8+EJy/3DodgPGLBzyg9OhqEzY/9pX\nJj/nTPfGRxz9Wj53rv0/bdTtW+xfxo1zLpjcJC7OmAoVzLoq95qAAJd5/HGnA/KMjCZ3scfmvCZN\nmpj169c7cu6MOHfWRbUSp6geuI9lZxogIXmdDkldr+Rk3q00lqePPMM3ky7Q58Gcn8Z67Bg0bAjF\nCyXy67Hy5K1b3e7MERiY47HkSj/+CD16MKzFGj5Y25zISGje3OmgskZENhhjmqR3nLYfSMNrD+zg\nWHIpxoyK0cTuq4KCePKbNjThF574R3KO79STkmL3k4iNNUzL9zB5JRGmTNHEnpNuvx369uXV9d0o\nVzqJRx/FK6fIZgdN7lfx+9ZE3v2xGg8Wm02L529xOhyVBUFtWvDp3Qs4FZ+Pf/Q9TU5+UX3xRbsJ\nx/jOM6i7eQpMnAihoTkXgLLGjaNwEWFCkVFs2WL/u+QKGandZMePt9bcXS5julbfbQoRa45OW+Z0\nOMoTYmLMGwVfM2DMB+9czJFTfvedLa8/3OmAMSLGDBiQI+dVaZg2zRgwjzRcb0SMWbHC6YAyD72g\nmjkzxh8xYMw79Sc5HYryoJS58013Zps8AUlm9ersPdeyZcYEBxvTusE5E5+/hDFNm9q+J8pZDz5o\n4qSQualcvKlUyXjVGojrkdHkrmWZVE5GGx57KoT6AZsZOrOL0+EoDwroeiuTn9pIBddB7r4tnv37\ns+c8W7ZAz55QpVISs0+0IF+xEJg1y/Y9Uc764AMK3lSar5L7cuiQYeBAcrRMl9M0ubsZA0O6HyQm\nsQCTR+4gOLSc0yEpDyv21r+Z1fBlLsQk0KlNAlFRnn3+tWuhfXsokC+F+Sac4rH7YfZsuOEGz55I\nZU6hQjB1Ki1j5jK66mdMnw7vvut0UNlHk7vbNx9GM31dJV6+8TPqvXK30+Go7BAURN05o1lQ7mFO\nHU2kY5uLHkvwCxfafa2LFU4hotBt3HhkDcydC40aeeYEyjOaNoUPP+SZ3x/lrupbePZZuxuWP9Lk\nDuzamsRj/8xH88BfGL4oXKeq+bMbbqBpxLvMLd6PoweTaNwgmRUrMv90KSnw6qvQrRtUrZjAysB2\n3BS1An76SXdW8laDBiGDB/PF762oViaWu++GXbucDsrzcn1yj4uDXu1jCE65wLfjjhFUrbLTIans\ndtNNtF72OmsL30LRmAN06uhi9Gi4ePH6nmbXLujYEV54Ae5pe5QVR6tTNnYXLFgAHTpkT+zKM8aN\no1BYQ3460ZyAlETCw+2CM3+Sq5O7MTCgSxS7TpXgm/BJ3Pj47U6HpHJKnTrUWj+ZdVXvo6drBqNG\nQc2ahqlT00/yv/8OAwZArVqwcaPhy1um8NXS8hSuWATWrYOwsJx5DSrzgoNh1iyq1MjDnItdOHEs\nhdtug9hYpwPznFzbfsAYePq+o7w37QbervQBT+98FEJCHItHOSQ2Fu6/n5/nXOSZkI/YnFCdwoWh\nRw9bni1fHvLnhyNHYM8eW23ZuhXy5jU83n47I7c+QKkjv8GQIXYXjkKFnH5F6nocOQKtWzP3dAt6\nxn9Nw4bCwoVQtKjTgaUto+0Hcu0891eGnTRgzJNFvjCu4yccjUU5zOUyZto0k1yuoplDV/NwyZmm\neP4Lxg4B/vwJCHCZtnVPm/c6/WgOl6pv76xf35hVq5x+BSordu82pmJFM6tAX5MnKMU0bmzMqVNO\nB5U2tHFY2t4acYIRb5XmwbxT+XxjIwJq3uxIHMrLnDsHn34KX36J2bSJU5QgKqAS8YXLUi5hHzck\n7CMvifaCe5cudlulzp11dy5/8Mcf0KkTcw434M6Ub7mpSgBz5sBNNzkd2N9ldOSeq5K7ywXDHz7J\nu1+WpE/eWUxZU4WgBnVyNAblI7Zvh40bYccOOHkSChaEIkWgWTNo1UrLL/7o6FEID2f5luLcmW8u\nAflDmDlTaN3a6cD+SpP7Fc6fh0duO8K05eV4Iv+njF3XmoDaNXPs/EopH3DuHPTvz+4ZW7itUAQH\nEsrw+uvC009DgJdMP9GWv6ls3uSiSeWTfLO8LKNvGMe4rZ01sSul/q5gQZg+nWovPcDac7XpETyf\nESPsroiHvG+/9Wvy6+SemAhjhp+keeMkzkQnsaj96zy751GkcqjDkSmlvFZAALz4IsUiZvNdqceZ\nyCBWLk2kZg3DW29BUpLTAWaMXyZ3Y2Du9HjqlYtm5NslCQ/8mU1jl9NxyX/svDallEpP69bIb5t4\ndFh+trtq0ilpHiNGQK0aLiZPhuRkpwO8Nr9K7klJMP2zWJpWOMptvfOTfCqWOW3+jxkHGlFm2L06\nq0EpdX0KF4axYwndPJtZnT5gDt0o+MdWHnwQalRN4p137PV2b+TzyT0xEZbPOcewbr9TvlAsvR8p\nQuyRc3xa5z22R56lW8QoKKcdHpVSWVC7NsybR7d1L/PrbS8wg16U/uMXnnkGyt+Qwh23nOeLL+DE\nCacD/ZPPzZY5fBgWL0hmy3c7+W1bIKsPV+K8Kz/BXKRn8Dz6hZ+k2+utCayjF0yVUtnk4EGYPJkt\nn67lsz868T13EUVFAKqVPE3LWmepVTeQqjXzUOGmPBQrJhQKuoBJuEhy2QoUKhFMsWKZO7XfToX8\n7jvo0wfykkCtgJ20KruPLi3O0f6RqhTp0gyCgrIhWqWUSsPu3Zif5rBxzhF+3lCcyDM1WEczjpJ2\nxeDZZ223iszwaHIXkXBgHBAIfGqMGX3F43mByUBj4BRwjzHmwLWeM7PJPTbWrjWomucPgkIraHte\npZR3iY2FAwc4u+Mwe3Ybjh6FM+eCOOsqSGDeIAIb1KVei/w0bZq5p89ock93mCsigcBHQBcgCvhF\nRGYbY7anOmwgEGOMqSoi9wJjgHsyF/q1FSlif6BSdjy9UkplTZEiUL8+hevXx8mtWjJyQbUZsMcY\ns88YkwhMA3pecUxP4Az3K1MAAAZSSURBVEv336cDnUR0aopSSjklIwXq8kDqtVlRQPO0jjHGJItI\nLFAC+MskIREZBAxy3zwnIjm9/0nJK2NS+p6kQd+Xv9P35O+ceE8yVLbI0auPxpiJwMScPGdqIrI+\nI7Wq3ETfk6vT9+Xv9D35O29+TzJSljkM7jk+VgX3fVc9RkSCgCLYC6tKKaUckJHk/gtQTUQqi0gw\ncC8w+4pjZgMPuv9+N7DEODXHUimlVPplGXcNfSiwADsV8nNjzDYReQW7I8hs4DPgfyKyBziN/QDw\nRo6VhLyYvidXp+/L3+l78nde+544tohJKaVU9vH53jJKKaX+TpO7Ukr5Ib9O7iJSXER+FpHd7j+v\n2qpHRFJEZJP758qLxX5BRMJFZJeI7BGRkVd5PK+IfON+fK2IhOZ8lDkrA+/JQyISnerfxiNOxJmT\nRORzETkhIlvTeFxE5H33e7ZZRJxchJkjMvCetBeR2FT/Tl7I6Rivxq+TOzASWGyMqQYsdt++mgvG\nmAbunx45F17OSNVCoitQC+grIrWuOOxyCwngPWwLCb+VwfcE4JtU/zY+zdEgnTEJCL/G412Bau6f\nQcCEHIjJaZO49nsCEJHq38krORBTuvw9uadui/AlcIeDsThJW0j8XUbek1zHGLMCO+MtLT2BycZa\nAxQVkRtyJjpnZOA98Ur+ntzLGGOOuv9+DCiTxnEhIrJeRNaIiD9+AFythUT5tI4xxiQDl1pI+KuM\nvCcAd7nLD9NFpOJVHs9tMvq+5TYtReQ3EZknIrWdDgZyuP1AdhCRRUDZqzz0XOobxhgjImnN+6xk\njDks8v/t3UtoXFUcx/HvTxEqND4wC4sLoRsVlVZqtSA+cSFVi0oQu/FBFduNUlctioqrWN1Vihql\ngmhRfEUxFPGRFqFgMSgJFaUWipUiCm1qqA2k/l2cMzC9xmasce7ce3+fTS5z7p175mb459wzmd/R\nYuBzSeMR8eN899Uq5yNgW0RMS3qYdGdzU8l9st4zRqohU5JWAh+Qpq1KVfniHhE3/1ObpF8kLYqI\ng/nWcdZFsCLi5/xzn6RR4AqgTsX930RIHGhIhMSc1yQi2l//K8CmLvSr13XyXmqUiDjStj0iaYuk\n/ogoNWSt7tMy7bEI9wHDxR0knZsXG0FSP3ANsKe4X8U5QuLv5rwmhbnkVcB3Xexfr/oQuDf/18wK\nYLJt6rORJJ3f+nxK0lWkulr6wKjyI/c5DAJvS1oD7AfuBpB0JbA2Ih4ELgFekvQn6ZcyWFiIpPJq\nFiExLzq8Jo9IWgXMkK7J/aV1uEskbQNuAPolHQCeAs4AiIgXgRFgJbAXOAo8UE5Pu6eDazIArJM0\nA/wB3NMLAyPHD5iZ1VDdp2XMzBrJxd3MrIZc3M3MasjF3cyshlzczcxqqO7/CmkNIelpYAo4C9gZ\nEZ+W2Jdnyu6DmYu71UpElB632gt9MPO0jFWWpMcl/SDpS+Ci/Nhrkgby9pOSdkuakPRy27cIl+cw\nsG8kPdfK6c757e9J2p7XANjUdq7Vksbzcz2bHzs9n28it62fpQ+Dkvbk8z3f1QtkjeaRu1WSpGWk\nb9EuJb2Px4CvC7u90MrWlvQ6cBspDGwr8FBE7JI0WDhmKSlbaBr4XtJm4Dgp334ZcAj4JKeH/gRc\nEBGX5XOcU+jjecCdwMU5uO6EdrP/k0fuVlXXAu9HxNEc3DTbClo3Kq0qNU5Kc7w0F9i+iNiV93mz\ncMxnETEZEcdIGUMXAsuB0Yj4NcchvwFcB+wDFkvaLOkW4EjhuSaBY8Crku4ifV3frCtc3K2WJC0A\ntgADEXE5MAQs6ODQ6bbt45zk7jYiDgFLgFFgLSk5sr19hrQoyDuku4btnb8Cs//Gxd2qaidwh6Qz\nJfUBtxfaW4X8N0kLSeFORMRh4HdJV+f2TgLSvgKul9Sfl+dbDezIKaKnRcS7wBPACeuJ5vOeHREj\nwHrSHwKzrvCcu1VSRIxJegv4lpTTv7vQfljSEDBBWoWrvX0NMJSTQHeQpk9Odq6DSgtofwEI+Dgi\nhiUtAbZKag2SNhYO7QOG812EgMdO4aWanRKnQlrjSFoYEVN5ewOwKCIeLblbZvPKI3drolslbSS9\n//fTgJx2ax6P3M3MasgfqJqZ1ZCLu5lZDbm4m5nVkIu7mVkNubibmdXQX39UX8H4x4bfAAAAAElF\nTkSuQmCC\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "VLVU3mWCFbn7",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 69
        },
        "outputId": "24905250-5fc2-483b-bf4c-b5fbc71cd1e3"
      },
      "source": [
        "accuracy_GNB  = round(accuracy_score(y_test,Yhat_GNB),3)\n",
        "precision_GNB = round(precision_score(y_test,Yhat_GNB),2)\n",
        "recall_GNB    = round(recall_score(y_test,Yhat_GNB),3)\n",
        "print(\"Accuracy  : {}% \\nPrecision : {}% \\nRecall    : {}% \".format(accuracy_GNB*100,precision_GNB*100,recall_GNB*100))"
      ],
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Accuracy  : 95.6% \n",
            "Precision : 90.0% \n",
            "Recall    : 97.39999999999999% \n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Q2duFqCZIlsO",
        "colab_type": "text"
      },
      "source": [
        "## --------------------------------Prediction---------------------------"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ebvn3GXSFAtk",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 171
        },
        "outputId": "54b6d9bb-29f2-4609-d781-5d4da2e988d4"
      },
      "source": [
        "prediction = pd.DataFrame({'Models':['LinearRegression','LogisticRegression','GaussianNB','DecisionTreeClassifier'],\n",
        " \n",
        " 'Accuracy_Score':[accuracy_lr,accuracy_lgr,accuracy_GNB,\n",
        "                   accuracy_DTC],\n",
        " \n",
        " \n",
        " 'Precision_Score':[precision_lr,precision_lgr,precision_GNB,precision_DTC],\n",
        " \n",
        " \n",
        " 'Recall_Score':[recall_lr,recall_lgr,recall_GNB,recall_DTC]})\n",
        "prediction.sort_values(by='Accuracy_Score', ascending=False)"
      ],
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Models</th>\n",
              "      <th>Accuracy_Score</th>\n",
              "      <th>Precision_Score</th>\n",
              "      <th>Recall_Score</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>LinearRegression</td>\n",
              "      <td>0.965</td>\n",
              "      <td>1.000</td>\n",
              "      <td>0.897</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>GaussianNB</td>\n",
              "      <td>0.956</td>\n",
              "      <td>0.900</td>\n",
              "      <td>0.974</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>LogisticRegression</td>\n",
              "      <td>0.939</td>\n",
              "      <td>0.881</td>\n",
              "      <td>0.949</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>DecisionTreeClassifier</td>\n",
              "      <td>0.886</td>\n",
              "      <td>0.783</td>\n",
              "      <td>0.923</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                   Models  Accuracy_Score  Precision_Score  Recall_Score\n",
              "0        LinearRegression           0.965            1.000         0.897\n",
              "2              GaussianNB           0.956            0.900         0.974\n",
              "1      LogisticRegression           0.939            0.881         0.949\n",
              "3  DecisionTreeClassifier           0.886            0.783         0.923"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 63
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6G4ZEeeNIagO",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}